[
    {
        "label": "alembic",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "alembic",
        "description": "alembic",
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "engine_from_config",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "pool",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "pathlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pathlib",
        "description": "pathlib",
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "fileConfig",
        "importPath": "logging.config",
        "description": "logging.config",
        "isExtraImport": true,
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "DatabaseError",
        "importPath": "psycopg2",
        "description": "psycopg2",
        "isExtraImport": true,
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "metadata",
        "importPath": "db.db_base",
        "description": "db.db_base",
        "isExtraImport": true,
        "detail": "db.db_base",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "config",
        "description": "config",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DATABASE_URL",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "POSTGRES_DB",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "API_PREFIX",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "ACCESS_TOKEN_EXPIRE_MINUTES",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_AUDIENCE",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "ACCESS_TOKEN_EXPIRE_MINUTES",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_ALGORITHM",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_AUDIENCE",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_ALGORITHM",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_AUDIENCE",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DATABASE_URL",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DB_MIN_SIZE",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DB_MAX_SIZE",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "AppExceptionCase",
        "importPath": "core.infrastructure.utils.app_exceptions",
        "description": "core.infrastructure.utils.app_exceptions",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.app_exceptions",
        "documentation": {}
    },
    {
        "label": "AppExceptionCase",
        "importPath": "core.infrastructure.utils.app_exceptions",
        "description": "core.infrastructure.utils.app_exceptions",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.app_exceptions",
        "documentation": {}
    },
    {
        "label": "app_exception_handler",
        "importPath": "core.infrastructure.utils.app_exceptions",
        "description": "core.infrastructure.utils.app_exceptions",
        "isExtraImport": true,
        "detail": "core.infrastructure.utils.app_exceptions",
        "documentation": {}
    },
    {
        "label": "loginDto",
        "importPath": "apps.auth.application.dto.login_dto",
        "description": "apps.auth.application.dto.login_dto",
        "isExtraImport": true,
        "detail": "apps.auth.application.dto.login_dto",
        "documentation": {}
    },
    {
        "label": "loginDto",
        "importPath": "apps.auth.application.dto.login_dto",
        "description": "apps.auth.application.dto.login_dto",
        "isExtraImport": true,
        "detail": "apps.auth.application.dto.login_dto",
        "documentation": {}
    },
    {
        "label": "loginDto",
        "importPath": "apps.auth.application.dto.login_dto",
        "description": "apps.auth.application.dto.login_dto",
        "isExtraImport": true,
        "detail": "apps.auth.application.dto.login_dto",
        "documentation": {}
    },
    {
        "label": "loginDto",
        "importPath": "apps.auth.application.dto.login_dto",
        "description": "apps.auth.application.dto.login_dto",
        "isExtraImport": true,
        "detail": "apps.auth.application.dto.login_dto",
        "documentation": {}
    },
    {
        "label": "AuthResponse",
        "importPath": "apps.auth.application.dto.login_response",
        "description": "apps.auth.application.dto.login_response",
        "isExtraImport": true,
        "detail": "apps.auth.application.dto.login_response",
        "documentation": {}
    },
    {
        "label": "AuthResponse",
        "importPath": "apps.auth.application.dto.login_response",
        "description": "apps.auth.application.dto.login_response",
        "isExtraImport": true,
        "detail": "apps.auth.application.dto.login_response",
        "documentation": {}
    },
    {
        "label": "AuthExceptions",
        "importPath": "apps.auth.application.exceptions.auth_exceptions",
        "description": "apps.auth.application.exceptions.auth_exceptions",
        "isExtraImport": true,
        "detail": "apps.auth.application.exceptions.auth_exceptions",
        "documentation": {}
    },
    {
        "label": "AuthExceptions",
        "importPath": "apps.auth.application.exceptions.auth_exceptions",
        "description": "apps.auth.application.exceptions.auth_exceptions",
        "isExtraImport": true,
        "detail": "apps.auth.application.exceptions.auth_exceptions",
        "documentation": {}
    },
    {
        "label": "AuthExceptions",
        "importPath": "apps.auth.application.exceptions.auth_exceptions",
        "description": "apps.auth.application.exceptions.auth_exceptions",
        "isExtraImport": true,
        "detail": "apps.auth.application.exceptions.auth_exceptions",
        "documentation": {}
    },
    {
        "label": "tokenGenerator",
        "importPath": "apps.auth.application.token.token_generator",
        "description": "apps.auth.application.token.token_generator",
        "isExtraImport": true,
        "detail": "apps.auth.application.token.token_generator",
        "documentation": {}
    },
    {
        "label": "tokenGenerator",
        "importPath": "apps.auth.application.token.token_generator",
        "description": "apps.auth.application.token.token_generator",
        "isExtraImport": true,
        "detail": "apps.auth.application.token.token_generator",
        "documentation": {}
    },
    {
        "label": "UserRepository",
        "importPath": "apps.user.domain.repositories.user_repository",
        "description": "apps.user.domain.repositories.user_repository",
        "isExtraImport": true,
        "detail": "apps.user.domain.repositories.user_repository",
        "documentation": {}
    },
    {
        "label": "UserRepository",
        "importPath": "apps.user.domain.repositories.user_repository",
        "description": "apps.user.domain.repositories.user_repository",
        "isExtraImport": true,
        "detail": "apps.user.domain.repositories.user_repository",
        "documentation": {}
    },
    {
        "label": "UserRepository",
        "importPath": "apps.user.domain.repositories.user_repository",
        "description": "apps.user.domain.repositories.user_repository",
        "isExtraImport": true,
        "detail": "apps.user.domain.repositories.user_repository",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "isExtraImport": true,
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "isExtraImport": true,
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "isExtraImport": true,
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "isExtraImport": true,
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "isExtraImport": true,
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "isExtraImport": true,
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "isExtraImport": true,
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "isExtraImport": true,
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "isExtraImport": true,
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "isExtraImport": true,
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "isExtraImport": true,
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "isExtraImport": true,
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "DatabaseURL",
        "importPath": "databases",
        "description": "databases",
        "isExtraImport": true,
        "detail": "databases",
        "documentation": {}
    },
    {
        "label": "CryptContext",
        "importPath": "passlib.context",
        "description": "passlib.context",
        "isExtraImport": true,
        "detail": "passlib.context",
        "documentation": {}
    },
    {
        "label": "CryptContext",
        "importPath": "passlib.context",
        "description": "passlib.context",
        "isExtraImport": true,
        "detail": "passlib.context",
        "documentation": {}
    },
    {
        "label": "CryptContext",
        "importPath": "passlib.context",
        "description": "passlib.context",
        "isExtraImport": true,
        "detail": "passlib.context",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "roleEnum",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "roleEnum",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordRequestForm",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordRequestForm",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordRequestForm",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "AuthService",
        "importPath": "apps.auth.infraestructure.service.auth_services",
        "description": "apps.auth.infraestructure.service.auth_services",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.service.auth_services",
        "documentation": {}
    },
    {
        "label": "UserMapper",
        "importPath": "apps.user.infrastructure.mappers.user_mapper",
        "description": "apps.user.infrastructure.mappers.user_mapper",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.mappers.user_mapper",
        "documentation": {}
    },
    {
        "label": "UserMapper",
        "importPath": "apps.user.infrastructure.mappers.user_mapper",
        "description": "apps.user.infrastructure.mappers.user_mapper",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.mappers.user_mapper",
        "documentation": {}
    },
    {
        "label": "UserMapper",
        "importPath": "apps.user.infrastructure.mappers.user_mapper",
        "description": "apps.user.infrastructure.mappers.user_mapper",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.mappers.user_mapper",
        "documentation": {}
    },
    {
        "label": "UserMapper",
        "importPath": "apps.user.infrastructure.mappers.user_mapper",
        "description": "apps.user.infrastructure.mappers.user_mapper",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.mappers.user_mapper",
        "documentation": {}
    },
    {
        "label": "dbUserRepository",
        "importPath": "apps.user.infrastructure.repositories.db_user_repository",
        "description": "apps.user.infrastructure.repositories.db_user_repository",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.repositories.db_user_repository",
        "documentation": {}
    },
    {
        "label": "dbUserRepository",
        "importPath": "apps.user.infrastructure.repositories.db_user_repository",
        "description": "apps.user.infrastructure.repositories.db_user_repository",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.repositories.db_user_repository",
        "documentation": {}
    },
    {
        "label": "dbUserRepository",
        "importPath": "apps.user.infrastructure.repositories.db_user_repository",
        "description": "apps.user.infrastructure.repositories.db_user_repository",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.repositories.db_user_repository",
        "documentation": {}
    },
    {
        "label": "get_database",
        "importPath": "db.db_dependencies",
        "description": "db.db_dependencies",
        "isExtraImport": true,
        "detail": "db.db_dependencies",
        "documentation": {}
    },
    {
        "label": "get_database",
        "importPath": "db.db_dependencies",
        "description": "db.db_dependencies",
        "isExtraImport": true,
        "detail": "db.db_dependencies",
        "documentation": {}
    },
    {
        "label": "get_database",
        "importPath": "db.db_dependencies",
        "description": "db.db_dependencies",
        "isExtraImport": true,
        "detail": "db.db_dependencies",
        "documentation": {}
    },
    {
        "label": "get_database",
        "importPath": "db.db_dependencies",
        "description": "db.db_dependencies",
        "isExtraImport": true,
        "detail": "db.db_dependencies",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "JWTCreds",
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "JWTMeta",
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "JWTPayload",
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "JWTPayload",
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "loginService",
        "importPath": "apps.auth.application.services.login_service",
        "description": "apps.auth.application.services.login_service",
        "isExtraImport": true,
        "detail": "apps.auth.application.services.login_service",
        "documentation": {}
    },
    {
        "label": "loginService",
        "importPath": "apps.auth.application.services.login_service",
        "description": "apps.auth.application.services.login_service",
        "isExtraImport": true,
        "detail": "apps.auth.application.services.login_service",
        "documentation": {}
    },
    {
        "label": "loginService",
        "importPath": "apps.auth.application.services.login_service",
        "description": "apps.auth.application.services.login_service",
        "isExtraImport": true,
        "detail": "apps.auth.application.services.login_service",
        "documentation": {}
    },
    {
        "label": "jwtGenerator",
        "importPath": "apps.auth.infraestructure.jwt.jwt_generator",
        "description": "apps.auth.infraestructure.jwt.jwt_generator",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.jwt.jwt_generator",
        "documentation": {}
    },
    {
        "label": "jwtGenerator",
        "importPath": "apps.auth.infraestructure.jwt.jwt_generator",
        "description": "apps.auth.infraestructure.jwt.jwt_generator",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.jwt.jwt_generator",
        "documentation": {}
    },
    {
        "label": "jwtGenerator",
        "importPath": "apps.auth.infraestructure.jwt.jwt_generator",
        "description": "apps.auth.infraestructure.jwt.jwt_generator",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.jwt.jwt_generator",
        "documentation": {}
    },
    {
        "label": "ExceptionDecorator",
        "importPath": "core.application.decorators.exception_decorator",
        "description": "core.application.decorators.exception_decorator",
        "isExtraImport": true,
        "detail": "core.application.decorators.exception_decorator",
        "documentation": {}
    },
    {
        "label": "ExceptionDecorator",
        "importPath": "core.application.decorators.exception_decorator",
        "description": "core.application.decorators.exception_decorator",
        "isExtraImport": true,
        "detail": "core.application.decorators.exception_decorator",
        "documentation": {}
    },
    {
        "label": "bcrypt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "bcrypt",
        "description": "bcrypt",
        "detail": "bcrypt",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseConfig",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "PostgresDsn",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientId",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "ApplicationError",
        "importPath": "core.application.errors.application_errors",
        "description": "core.application.errors.application_errors",
        "isExtraImport": true,
        "detail": "core.application.errors.application_errors",
        "documentation": {}
    },
    {
        "label": "ApplicationError",
        "importPath": "core.application.errors.application_errors",
        "description": "core.application.errors.application_errors",
        "isExtraImport": true,
        "detail": "core.application.errors.application_errors",
        "documentation": {}
    },
    {
        "label": "CreateIngredientDto",
        "importPath": "apps.ingredients.application.dto.create_ingredient_dto",
        "description": "apps.ingredients.application.dto.create_ingredient_dto",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.dto.create_ingredient_dto",
        "documentation": {}
    },
    {
        "label": "CreateIngredientDto",
        "importPath": "apps.ingredients.application.dto.create_ingredient_dto",
        "description": "apps.ingredients.application.dto.create_ingredient_dto",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.dto.create_ingredient_dto",
        "documentation": {}
    },
    {
        "label": "CreateIngredientDto",
        "importPath": "apps.ingredients.application.dto.create_ingredient_dto",
        "description": "apps.ingredients.application.dto.create_ingredient_dto",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.dto.create_ingredient_dto",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "IngredientRepository",
        "importPath": "apps.ingredients.domain.repositories.ingredient_repository",
        "description": "apps.ingredients.domain.repositories.ingredient_repository",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.repositories.ingredient_repository",
        "documentation": {}
    },
    {
        "label": "IngredientRepository",
        "importPath": "apps.ingredients.domain.repositories.ingredient_repository",
        "description": "apps.ingredients.domain.repositories.ingredient_repository",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.repositories.ingredient_repository",
        "documentation": {}
    },
    {
        "label": "IngredientRepository",
        "importPath": "apps.ingredients.domain.repositories.ingredient_repository",
        "description": "apps.ingredients.domain.repositories.ingredient_repository",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.repositories.ingredient_repository",
        "documentation": {}
    },
    {
        "label": "IngredientRepository",
        "importPath": "apps.ingredients.domain.repositories.ingredient_repository",
        "description": "apps.ingredients.domain.repositories.ingredient_repository",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.repositories.ingredient_repository",
        "documentation": {}
    },
    {
        "label": "IngredientRepository",
        "importPath": "apps.ingredients.domain.repositories.ingredient_repository",
        "description": "apps.ingredients.domain.repositories.ingredient_repository",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.repositories.ingredient_repository",
        "documentation": {}
    },
    {
        "label": "IngredientName",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientName",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientName",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientName",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientName",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientName",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "IngredientQuantity",
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "EventHandler",
        "importPath": "core.application.events.event_handler",
        "description": "core.application.events.event_handler",
        "isExtraImport": true,
        "detail": "core.application.events.event_handler",
        "documentation": {}
    },
    {
        "label": "EventHandler",
        "importPath": "core.application.events.event_handler",
        "description": "core.application.events.event_handler",
        "isExtraImport": true,
        "detail": "core.application.events.event_handler",
        "documentation": {}
    },
    {
        "label": "EventHandler",
        "importPath": "core.application.events.event_handler",
        "description": "core.application.events.event_handler",
        "isExtraImport": true,
        "detail": "core.application.events.event_handler",
        "documentation": {}
    },
    {
        "label": "EventHandler",
        "importPath": "core.application.events.event_handler",
        "description": "core.application.events.event_handler",
        "isExtraImport": true,
        "detail": "core.application.events.event_handler",
        "documentation": {}
    },
    {
        "label": "ModifyIngredientQuantityDto",
        "importPath": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "description": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "documentation": {}
    },
    {
        "label": "ModifyIngredientQuantityDto",
        "importPath": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "description": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "documentation": {}
    },
    {
        "label": "ModifyIngredientQuantityDto",
        "importPath": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "description": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "documentation": {}
    },
    {
        "label": "IngredientsNotFoundApplicatonError",
        "importPath": "apps.ingredients.application.errors.ingredients_not_found",
        "description": "apps.ingredients.application.errors.ingredients_not_found",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.errors.ingredients_not_found",
        "documentation": {}
    },
    {
        "label": "IngredientsNotFoundApplicatonError",
        "importPath": "apps.ingredients.application.errors.ingredients_not_found",
        "description": "apps.ingredients.application.errors.ingredients_not_found",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.errors.ingredients_not_found",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "isExtraImport": true,
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "isExtraImport": true,
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "isExtraImport": true,
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "isExtraImport": true,
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "isExtraImport": true,
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "isExtraImport": true,
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "IngredientIdNotValid",
        "importPath": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientIdNotValid",
        "importPath": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "isExtraImport": true,
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "IngredientNameNotValid",
        "importPath": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientNameNotValid",
        "importPath": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientQuantityNotValid",
        "importPath": "apps.ingredients.domain.exceptions.ingredient_quantity_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_quantity_not_valid_exception",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.exceptions.ingredient_quantity_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientCreatedEvent",
        "importPath": "apps.ingredients.domain.events.ingredient_created",
        "description": "apps.ingredients.domain.events.ingredient_created",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.events.ingredient_created",
        "documentation": {}
    },
    {
        "label": "IngredientQuantityDownEvent",
        "importPath": "apps.ingredients.domain.events.ingredient_quantity_down",
        "description": "apps.ingredients.domain.events.ingredient_quantity_down",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.events.ingredient_quantity_down",
        "documentation": {}
    },
    {
        "label": "IngredientQuantityUpEvent",
        "importPath": "apps.ingredients.domain.events.ingredient_quantity_up",
        "description": "apps.ingredients.domain.events.ingredient_quantity_up",
        "isExtraImport": true,
        "detail": "apps.ingredients.domain.events.ingredient_quantity_up",
        "documentation": {}
    },
    {
        "label": "Aggregate",
        "importPath": "core.domain.aggregates.aggregate",
        "description": "core.domain.aggregates.aggregate",
        "isExtraImport": true,
        "detail": "core.domain.aggregates.aggregate",
        "documentation": {}
    },
    {
        "label": "Aggregate",
        "importPath": "core.domain.aggregates.aggregate",
        "description": "core.domain.aggregates.aggregate",
        "isExtraImport": true,
        "detail": "core.domain.aggregates.aggregate",
        "documentation": {}
    },
    {
        "label": "Aggregate",
        "importPath": "core.domain.aggregates.aggregate",
        "description": "core.domain.aggregates.aggregate",
        "isExtraImport": true,
        "detail": "core.domain.aggregates.aggregate",
        "documentation": {}
    },
    {
        "label": "Entity",
        "importPath": "core.domain.entities.entity",
        "description": "core.domain.entities.entity",
        "isExtraImport": true,
        "detail": "core.domain.entities.entity",
        "documentation": {}
    },
    {
        "label": "Entity",
        "importPath": "core.domain.entities.entity",
        "description": "core.domain.entities.entity",
        "isExtraImport": true,
        "detail": "core.domain.entities.entity",
        "documentation": {}
    },
    {
        "label": "Mapper",
        "importPath": "core.application.mappers.mapper",
        "description": "core.application.mappers.mapper",
        "isExtraImport": true,
        "detail": "core.application.mappers.mapper",
        "documentation": {}
    },
    {
        "label": "Mapper",
        "importPath": "core.application.mappers.mapper",
        "description": "core.application.mappers.mapper",
        "isExtraImport": true,
        "detail": "core.application.mappers.mapper",
        "documentation": {}
    },
    {
        "label": "IngredientMapper",
        "importPath": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "description": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "documentation": {}
    },
    {
        "label": "IngredientMapper",
        "importPath": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "description": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "documentation": {}
    },
    {
        "label": "get_current_active_user",
        "importPath": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "description": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "documentation": {}
    },
    {
        "label": "get_current_active_user",
        "importPath": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "description": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "documentation": {}
    },
    {
        "label": "CreateIngredientApplicationService",
        "importPath": "apps.ingredients.application.services.create_ingredient",
        "description": "apps.ingredients.application.services.create_ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.services.create_ingredient",
        "documentation": {}
    },
    {
        "label": "EgressIngredientApplicationService",
        "importPath": "apps.ingredients.application.services.egress_ingredient",
        "description": "apps.ingredients.application.services.egress_ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.services.egress_ingredient",
        "documentation": {}
    },
    {
        "label": "GetIngredientApplicationService",
        "importPath": "apps.ingredients.application.services.get_ingredient",
        "description": "apps.ingredients.application.services.get_ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.services.get_ingredient",
        "documentation": {}
    },
    {
        "label": "IngressIngredientApplicationService",
        "importPath": "apps.ingredients.application.services.ingress_ingredient",
        "description": "apps.ingredients.application.services.ingress_ingredient",
        "isExtraImport": true,
        "detail": "apps.ingredients.application.services.ingress_ingredient",
        "documentation": {}
    },
    {
        "label": "IngredientInDB",
        "importPath": "apps.ingredients.infrastructure.db_entity.ingredient_in_db",
        "description": "apps.ingredients.infrastructure.db_entity.ingredient_in_db",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.db_entity.ingredient_in_db",
        "documentation": {}
    },
    {
        "label": "CreateIngredientEntry",
        "importPath": "apps.ingredients.infrastructure.entries.create_ingredient_entry",
        "description": "apps.ingredients.infrastructure.entries.create_ingredient_entry",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.entries.create_ingredient_entry",
        "documentation": {}
    },
    {
        "label": "ModifyQuantityEntry",
        "importPath": "apps.ingredients.infrastructure.entries.modify_quantity_entry",
        "description": "apps.ingredients.infrastructure.entries.modify_quantity_entry",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.entries.modify_quantity_entry",
        "documentation": {}
    },
    {
        "label": "DbIngredientsRepository",
        "importPath": "apps.ingredients.infrastructure.repositories.db_ingredients_repository",
        "description": "apps.ingredients.infrastructure.repositories.db_ingredients_repository",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.repositories.db_ingredients_repository",
        "documentation": {}
    },
    {
        "label": "GetIngredientResponse",
        "importPath": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "description": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "documentation": {}
    },
    {
        "label": "SaveIngredientResponse",
        "importPath": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "description": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "documentation": {}
    },
    {
        "label": "NativeEventHandler",
        "importPath": "core.infrastructure.events.event_handler_native",
        "description": "core.infrastructure.events.event_handler_native",
        "isExtraImport": true,
        "detail": "core.infrastructure.events.event_handler_native",
        "documentation": {}
    },
    {
        "label": "StoreId",
        "importPath": "apps.store.domain.value_objects.store_id",
        "description": "apps.store.domain.value_objects.store_id",
        "isExtraImport": true,
        "detail": "apps.store.domain.value_objects.store_id",
        "documentation": {}
    },
    {
        "label": "StoreId",
        "importPath": "apps.store.domain.value_objects.store_id",
        "description": "apps.store.domain.value_objects.store_id",
        "isExtraImport": true,
        "detail": "apps.store.domain.value_objects.store_id",
        "documentation": {}
    },
    {
        "label": "StoreId",
        "importPath": "apps.store.domain.value_objects.store_id",
        "description": "apps.store.domain.value_objects.store_id",
        "isExtraImport": true,
        "detail": "apps.store.domain.value_objects.store_id",
        "documentation": {}
    },
    {
        "label": "StoreName",
        "importPath": "apps.store.domain.value_objects.store_name",
        "description": "apps.store.domain.value_objects.store_name",
        "isExtraImport": true,
        "detail": "apps.store.domain.value_objects.store_name",
        "documentation": {}
    },
    {
        "label": "StoreName",
        "importPath": "apps.store.domain.value_objects.store_name",
        "description": "apps.store.domain.value_objects.store_name",
        "isExtraImport": true,
        "detail": "apps.store.domain.value_objects.store_name",
        "documentation": {}
    },
    {
        "label": "Store",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "StoreCreatedEvent",
        "importPath": "apps.store.domain.events.store_created",
        "description": "apps.store.domain.events.store_created",
        "isExtraImport": true,
        "detail": "apps.store.domain.events.store_created",
        "documentation": {}
    },
    {
        "label": "UserId",
        "importPath": "apps.user.domain.value_objects.user_id",
        "description": "apps.user.domain.value_objects.user_id",
        "isExtraImport": true,
        "detail": "apps.user.domain.value_objects.user_id",
        "documentation": {}
    },
    {
        "label": "UserId",
        "importPath": "apps.user.domain.value_objects.user_id",
        "description": "apps.user.domain.value_objects.user_id",
        "isExtraImport": true,
        "detail": "apps.user.domain.value_objects.user_id",
        "documentation": {}
    },
    {
        "label": "UserId",
        "importPath": "apps.user.domain.value_objects.user_id",
        "description": "apps.user.domain.value_objects.user_id",
        "isExtraImport": true,
        "detail": "apps.user.domain.value_objects.user_id",
        "documentation": {}
    },
    {
        "label": "UserId",
        "importPath": "apps.user.domain.value_objects.user_id",
        "description": "apps.user.domain.value_objects.user_id",
        "isExtraImport": true,
        "detail": "apps.user.domain.value_objects.user_id",
        "documentation": {}
    },
    {
        "label": "UserId",
        "importPath": "apps.user.domain.value_objects.user_id",
        "description": "apps.user.domain.value_objects.user_id",
        "isExtraImport": true,
        "detail": "apps.user.domain.value_objects.user_id",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.user.domain.user",
        "description": "apps.user.domain.user",
        "isExtraImport": true,
        "detail": "apps.user.domain.user",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.user.domain.user",
        "description": "apps.user.domain.user",
        "isExtraImport": true,
        "detail": "apps.user.domain.user",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.user.domain.user",
        "description": "apps.user.domain.user",
        "isExtraImport": true,
        "detail": "apps.user.domain.user",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.user.domain.user",
        "description": "apps.user.domain.user",
        "isExtraImport": true,
        "detail": "apps.user.domain.user",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "importPath": "src.core.domain.events.domain_event",
        "description": "src.core.domain.events.domain_event",
        "isExtraImport": true,
        "detail": "src.core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "UserName",
        "importPath": "apps.user.domain.value_objects.user_name",
        "description": "apps.user.domain.value_objects.user_name",
        "isExtraImport": true,
        "detail": "apps.user.domain.value_objects.user_name",
        "documentation": {}
    },
    {
        "label": "GetUserApplicationService",
        "importPath": "apps.user.application.services.get_user",
        "description": "apps.user.application.services.get_user",
        "isExtraImport": true,
        "detail": "apps.user.application.services.get_user",
        "documentation": {}
    },
    {
        "label": "GetUserResponse",
        "importPath": "apps.user.infrastructure.responses.user_responses",
        "description": "apps.user.infrastructure.responses.user_responses",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.responses.user_responses",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "starlette.responses",
        "description": "starlette.responses",
        "isExtraImport": true,
        "detail": "starlette.responses",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "starlette.responses",
        "description": "starlette.responses",
        "isExtraImport": true,
        "detail": "starlette.responses",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "b64decode",
        "importPath": "base64",
        "description": "base64",
        "isExtraImport": true,
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "b64encode",
        "importPath": "base64",
        "description": "base64",
        "isExtraImport": true,
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "AES",
        "importPath": "Crypto.Cipher",
        "description": "Crypto.Cipher",
        "isExtraImport": true,
        "detail": "Crypto.Cipher",
        "documentation": {}
    },
    {
        "label": "pad",
        "importPath": "Crypto.Util.Padding",
        "description": "Crypto.Util.Padding",
        "isExtraImport": true,
        "detail": "Crypto.Util.Padding",
        "documentation": {}
    },
    {
        "label": "unpad",
        "importPath": "Crypto.Util.Padding",
        "description": "Crypto.Util.Padding",
        "isExtraImport": true,
        "detail": "Crypto.Util.Padding",
        "documentation": {}
    },
    {
        "label": "ic",
        "importPath": "icecream",
        "description": "icecream",
        "isExtraImport": true,
        "detail": "icecream",
        "documentation": {}
    },
    {
        "label": "AES_BLOCKSIZE",
        "importPath": "shared.core.config",
        "description": "shared.core.config",
        "isExtraImport": true,
        "detail": "shared.core.config",
        "documentation": {}
    },
    {
        "label": "AES_KEY",
        "importPath": "shared.core.config",
        "description": "shared.core.config",
        "isExtraImport": true,
        "detail": "shared.core.config",
        "documentation": {}
    },
    {
        "label": "wraps",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "jsonable_encoder",
        "importPath": "fastapi.encoders",
        "description": "fastapi.encoders",
        "isExtraImport": true,
        "detail": "fastapi.encoders",
        "documentation": {}
    },
    {
        "label": "RequestValidationError",
        "importPath": "fastapi.exceptions",
        "description": "fastapi.exceptions",
        "isExtraImport": true,
        "detail": "fastapi.exceptions",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "starlette.exceptions",
        "description": "starlette.exceptions",
        "isExtraImport": true,
        "detail": "starlette.exceptions",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "starlette.requests",
        "description": "starlette.requests",
        "isExtraImport": true,
        "detail": "starlette.requests",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "starlette.requests",
        "description": "starlette.requests",
        "isExtraImport": true,
        "detail": "starlette.requests",
        "documentation": {}
    },
    {
        "label": "HTTP_422_UNPROCESSABLE_ENTITY",
        "importPath": "starlette.status",
        "description": "starlette.status",
        "isExtraImport": true,
        "detail": "starlette.status",
        "documentation": {}
    },
    {
        "label": "pytz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytz",
        "description": "pytz",
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "UserInDB",
        "importPath": "modules.users.users.user_schemas",
        "description": "modules.users.users.user_schemas",
        "isExtraImport": true,
        "detail": "modules.users.users.user_schemas",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.ext.declarative",
        "description": "sqlalchemy.ext.declarative",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.declarative",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "starlette.config",
        "description": "starlette.config",
        "isExtraImport": true,
        "detail": "starlette.config",
        "documentation": {}
    },
    {
        "label": "Secret",
        "importPath": "starlette.datastructures",
        "description": "starlette.datastructures",
        "isExtraImport": true,
        "detail": "starlette.datastructures",
        "documentation": {}
    },
    {
        "label": "connect_to_db",
        "importPath": "db.db_tasks",
        "description": "db.db_tasks",
        "isExtraImport": true,
        "detail": "db.db_tasks",
        "documentation": {}
    },
    {
        "label": "close_db_connection",
        "importPath": "db.db_tasks",
        "description": "db.db_tasks",
        "isExtraImport": true,
        "detail": "db.db_tasks",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "create_start_app_handler",
        "importPath": "handlers",
        "description": "handlers",
        "isExtraImport": true,
        "detail": "handlers",
        "documentation": {}
    },
    {
        "label": "create_stop_app_handler",
        "importPath": "handlers",
        "description": "handlers",
        "isExtraImport": true,
        "detail": "handlers",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "routers",
        "description": "routers",
        "isExtraImport": true,
        "detail": "routers",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "apps.auth.infraestructure.routes.auth_routes",
        "description": "apps.auth.infraestructure.routes.auth_routes",
        "isExtraImport": true,
        "detail": "apps.auth.infraestructure.routes.auth_routes",
        "documentation": {}
    },
    {
        "label": "ingredient_router",
        "importPath": "apps.ingredients.infrastructure.routes.ingredients_routes",
        "description": "apps.ingredients.infrastructure.routes.ingredients_routes",
        "isExtraImport": true,
        "detail": "apps.ingredients.infrastructure.routes.ingredients_routes",
        "documentation": {}
    },
    {
        "label": "user_router",
        "importPath": "apps.user.infrastructure.routes.user_routes",
        "description": "apps.user.infrastructure.routes.user_routes",
        "isExtraImport": true,
        "detail": "apps.user.infrastructure.routes.user_routes",
        "documentation": {}
    },
    {
        "label": "alter_ingredients_table",
        "kind": 2,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "def alter_ingredients_table():\n    op.alter_column(\n        table_name= \"ingredients\",\n        column_name= \"quantity\",\n        type_= sa.Float\n    )\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "def upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "def downgrade() -> None:\n    pass",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "revision = '43d70d079518'\ndown_revision = '88ec9bb40650'\nbranch_labels = None\ndepends_on = None\ndef alter_ingredients_table():\n    op.alter_column(\n        table_name= \"ingredients\",\n        column_name= \"quantity\",\n        type_= sa.Float\n    )",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "down_revision = '88ec9bb40650'\nbranch_labels = None\ndepends_on = None\ndef alter_ingredients_table():\n    op.alter_column(\n        table_name= \"ingredients\",\n        column_name= \"quantity\",\n        type_= sa.Float\n    )\ndef upgrade() -> None:",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef alter_ingredients_table():\n    op.alter_column(\n        table_name= \"ingredients\",\n        column_name= \"quantity\",\n        type_= sa.Float\n    )\ndef upgrade() -> None:\n    alter_ingredients_table()",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "description": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "peekOfCode": "depends_on = None\ndef alter_ingredients_table():\n    op.alter_column(\n        table_name= \"ingredients\",\n        column_name= \"quantity\",\n        type_= sa.Float\n    )\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:",
        "detail": "alembic.versions.43d70d079518_alter_table_ingredient_quantity_int_",
        "documentation": {}
    },
    {
        "label": "create_users_table",
        "kind": 2,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "def create_users_table():\n    op.create_table(\n        \"users\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"username\", sa.String(40), unique=True, index=True, nullable=False),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"password\", sa.Text, nullable=False),\n        sa.Column(\"role\", sa.Text, nullable=False),\n    )\ndef upgrade() -> None:",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "def upgrade() -> None:\n    create_users_table()\ndef downgrade() -> None:\n    op.drop_table(\"users\")",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "def downgrade() -> None:\n    op.drop_table(\"users\")",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "revision = \"492eec39b72d\"\ndown_revision = \"4d495ae5b0ff\"\nbranch_labels = None\ndepends_on = None\ndef create_users_table():\n    op.create_table(\n        \"users\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"username\", sa.String(40), unique=True, index=True, nullable=False),\n        sa.Column(\"name\", sa.Text, nullable=False),",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "down_revision = \"4d495ae5b0ff\"\nbranch_labels = None\ndepends_on = None\ndef create_users_table():\n    op.create_table(\n        \"users\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"username\", sa.String(40), unique=True, index=True, nullable=False),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"password\", sa.Text, nullable=False),",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef create_users_table():\n    op.create_table(\n        \"users\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"username\", sa.String(40), unique=True, index=True, nullable=False),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"password\", sa.Text, nullable=False),\n        sa.Column(\"role\", sa.Text, nullable=False),",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "alembic.versions.492eec39b72d_create_users_table",
        "description": "alembic.versions.492eec39b72d_create_users_table",
        "peekOfCode": "depends_on = None\ndef create_users_table():\n    op.create_table(\n        \"users\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"username\", sa.String(40), unique=True, index=True, nullable=False),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"password\", sa.Text, nullable=False),\n        sa.Column(\"role\", sa.Text, nullable=False),\n    )",
        "detail": "alembic.versions.492eec39b72d_create_users_table",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "alembic.versions.4d495ae5b0ff_base_migration",
        "description": "alembic.versions.4d495ae5b0ff_base_migration",
        "peekOfCode": "def upgrade() -> None:\n    pass\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.4d495ae5b0ff_base_migration",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "alembic.versions.4d495ae5b0ff_base_migration",
        "description": "alembic.versions.4d495ae5b0ff_base_migration",
        "peekOfCode": "def downgrade() -> None:\n    pass",
        "detail": "alembic.versions.4d495ae5b0ff_base_migration",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "alembic.versions.4d495ae5b0ff_base_migration",
        "description": "alembic.versions.4d495ae5b0ff_base_migration",
        "peekOfCode": "revision = \"4d495ae5b0ff\"\ndown_revision = None\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    pass\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.4d495ae5b0ff_base_migration",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "alembic.versions.4d495ae5b0ff_base_migration",
        "description": "alembic.versions.4d495ae5b0ff_base_migration",
        "peekOfCode": "down_revision = None\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    pass\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.4d495ae5b0ff_base_migration",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "alembic.versions.4d495ae5b0ff_base_migration",
        "description": "alembic.versions.4d495ae5b0ff_base_migration",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    pass\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.4d495ae5b0ff_base_migration",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "alembic.versions.4d495ae5b0ff_base_migration",
        "description": "alembic.versions.4d495ae5b0ff_base_migration",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    pass\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.4d495ae5b0ff_base_migration",
        "documentation": {}
    },
    {
        "label": "create_ingredients_table",
        "kind": 2,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "def create_ingredients_table():\n    op.create_table(\n        \"ingredients\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"quantity\", sa.Numeric, nullable=False),\n    )\ndef upgrade() -> None:\n    create_ingredients_table()\ndef downgrade() -> None:",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "def upgrade() -> None:\n    create_ingredients_table()\ndef downgrade() -> None:\n    op.drop_table(\"ingredients\")",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "def downgrade() -> None:\n    op.drop_table(\"ingredients\")",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "revision = '88ec9bb40650'\ndown_revision = '492eec39b72d'\nbranch_labels = None\ndepends_on = None\ndef create_ingredients_table():\n    op.create_table(\n        \"ingredients\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"quantity\", sa.Numeric, nullable=False),",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "down_revision = '492eec39b72d'\nbranch_labels = None\ndepends_on = None\ndef create_ingredients_table():\n    op.create_table(\n        \"ingredients\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"quantity\", sa.Numeric, nullable=False),\n    )",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef create_ingredients_table():\n    op.create_table(\n        \"ingredients\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"quantity\", sa.Numeric, nullable=False),\n    )\ndef upgrade() -> None:",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "description": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "peekOfCode": "depends_on = None\ndef create_ingredients_table():\n    op.create_table(\n        \"ingredients\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False),\n        sa.Column(\"quantity\", sa.Numeric, nullable=False),\n    )\ndef upgrade() -> None:\n    create_ingredients_table()",
        "detail": "alembic.versions.88ec9bb40650_create_ingredients_table",
        "documentation": {}
    },
    {
        "label": "create_store_table",
        "kind": 2,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "def create_store_table():\n    op.create_table(\n        \"store\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False)\n    )\ndef upgrade() -> None:\n    create_store_table()\ndef downgrade() -> None:\n    op.drop_table(\"store\")",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "def upgrade() -> None:\n    create_store_table()\ndef downgrade() -> None:\n    op.drop_table(\"store\")",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "def downgrade() -> None:\n    op.drop_table(\"store\")",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "revision = '95af1febcd51'\ndown_revision = '43d70d079518'\nbranch_labels = None\ndepends_on = None\ndef create_store_table():\n    op.create_table(\n        \"store\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False)\n    )",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "down_revision = '43d70d079518'\nbranch_labels = None\ndepends_on = None\ndef create_store_table():\n    op.create_table(\n        \"store\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False)\n    )\ndef upgrade() -> None:",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef create_store_table():\n    op.create_table(\n        \"store\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False)\n    )\ndef upgrade() -> None:\n    create_store_table()",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "alembic.versions.95af1febcd51_create_table_store",
        "description": "alembic.versions.95af1febcd51_create_table_store",
        "peekOfCode": "depends_on = None\ndef create_store_table():\n    op.create_table(\n        \"store\",\n        sa.Column(\"id\", UUID, primary_key=True, default=uuid4()),\n        sa.Column(\"name\", sa.Text, nullable=False)\n    )\ndef upgrade() -> None:\n    create_store_table()\ndef downgrade() -> None:",
        "detail": "alembic.versions.95af1febcd51_create_table_store",
        "documentation": {}
    },
    {
        "label": "alter_ingredients_table",
        "kind": 2,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "def alter_ingredients_table():\n    op.add_column(\"ingredients\", \n                  sa.Column(\"store_id\", UUID, sa.ForeignKey(\"store.id\"), nullable=True))\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "def upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "def downgrade() -> None:\n    pass",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "revision = 'ce0a1e663025'\ndown_revision = '95af1febcd51'\nbranch_labels = None\ndepends_on = None\ndef alter_ingredients_table():\n    op.add_column(\"ingredients\", \n                  sa.Column(\"store_id\", UUID, sa.ForeignKey(\"store.id\"), nullable=True))\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "down_revision = '95af1febcd51'\nbranch_labels = None\ndepends_on = None\ndef alter_ingredients_table():\n    op.add_column(\"ingredients\", \n                  sa.Column(\"store_id\", UUID, sa.ForeignKey(\"store.id\"), nullable=True))\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef alter_ingredients_table():\n    op.add_column(\"ingredients\", \n                  sa.Column(\"store_id\", UUID, sa.ForeignKey(\"store.id\"), nullable=True))\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "description": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "peekOfCode": "depends_on = None\ndef alter_ingredients_table():\n    op.add_column(\"ingredients\", \n                  sa.Column(\"store_id\", UUID, sa.ForeignKey(\"store.id\"), nullable=True))\ndef upgrade() -> None:\n    alter_ingredients_table()\ndef downgrade() -> None:\n    pass",
        "detail": "alembic.versions.ce0a1e663025_add_store_to_ingredient",
        "documentation": {}
    },
    {
        "label": "run_migrations_online",
        "kind": 2,
        "importPath": "alembic.env",
        "description": "alembic.env",
        "peekOfCode": "def run_migrations_online() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.\n    Calls to context.execute() here emit the given string to the\n    script output.\n    \"\"\"\n    DB_URL = f\"{DATABASE_URL}_test\" if os.environ.get(\"TESTING\") else str(DATABASE_URL)",
        "detail": "alembic.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_offline",
        "kind": 2,
        "importPath": "alembic.env",
        "description": "alembic.env",
        "peekOfCode": "def run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'online' mode.\n    In this scenario we need to create an Engine\n    and associate a connection with the context.\n    \"\"\"\n    if os.environ.get(\"TESTING\"):\n        raise DatabaseError(\n            \"Running testing migrations offline currently not permitted.\"\n        )\n    alembic.context.configure(",
        "detail": "alembic.env",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "alembic.env",
        "description": "alembic.env",
        "peekOfCode": "config = alembic.context.config\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\nconfig.set_main_option(\"sqlalchemy.url\", str(DATABASE_URL))\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata",
        "detail": "alembic.env",
        "documentation": {}
    },
    {
        "label": "target_metadata",
        "kind": 5,
        "importPath": "alembic.env",
        "description": "alembic.env",
        "peekOfCode": "target_metadata = None\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option(\"my_important_option\")\n# ... etc.\ndef run_migrations_online() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation",
        "detail": "alembic.env",
        "documentation": {}
    },
    {
        "label": "loginDto",
        "kind": 6,
        "importPath": "apps.auth.application.dto.login_dto",
        "description": "apps.auth.application.dto.login_dto",
        "peekOfCode": "class loginDto:\n    def __init__(self, username: str, password: str) -> None:\n        self.username = username\n        self.password = password\n        pass",
        "detail": "apps.auth.application.dto.login_dto",
        "documentation": {}
    },
    {
        "label": "AuthResponse",
        "kind": 6,
        "importPath": "apps.auth.application.dto.login_response",
        "description": "apps.auth.application.dto.login_response",
        "peekOfCode": "class AuthResponse(BaseSchema):\n    access_token: str\n    token_type: str\n    id: UUID\n    name: str\n    username: str\n    role: str",
        "detail": "apps.auth.application.dto.login_response",
        "documentation": {}
    },
    {
        "label": "AuthExceptions",
        "kind": 6,
        "importPath": "apps.auth.application.exceptions.auth_exceptions",
        "description": "apps.auth.application.exceptions.auth_exceptions",
        "peekOfCode": "class AuthExceptions:\n    class AuthNoUsernameException(AppExceptionCase):\n        \"\"\"_\n        Auth no username\n        \"\"\"\n        def __init__(self, msg: str = \"\"):  # context: dict = None):\n            status_code = 422\n            # context = {\"message\": \"No se ha ingresado un nombre de usuario\"}\n            msg = \"No se ha ingresado un nombre de usuario\"\n            AppExceptionCase.__init__(self, status_code, msg)",
        "detail": "apps.auth.application.exceptions.auth_exceptions",
        "documentation": {}
    },
    {
        "label": "loginServic",
        "kind": 6,
        "importPath": "apps.auth.application.services.login_service",
        "description": "apps.auth.application.services.login_service",
        "peekOfCode": "class loginService (ApplicationService):\n    def __init__(self, db: Database, user_repository: UserRepository, token_generator: tokenGenerator) -> None:\n        self.db = db\n        self.user_repository = user_repository\n        self.token_generator = token_generator\n        super().__init__()\n    def verify_password(self, password: str, hashed_pw: str) -> bool:\n        return pwd_context.verify(password, hashed_pw)\n    async def execute (self, input: loginDto)-> Result[AuthResponse]:\n        if not input.username:",
        "detail": "apps.auth.application.services.login_service",
        "documentation": {}
    },
    {
        "label": "pwd_context",
        "kind": 5,
        "importPath": "apps.auth.application.services.login_service",
        "description": "apps.auth.application.services.login_service",
        "peekOfCode": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\nclass loginService (ApplicationService):\n    def __init__(self, db: Database, user_repository: UserRepository, token_generator: tokenGenerator) -> None:\n        self.db = db\n        self.user_repository = user_repository\n        self.token_generator = token_generator\n        super().__init__()\n    def verify_password(self, password: str, hashed_pw: str) -> bool:\n        return pwd_context.verify(password, hashed_pw)\n    async def execute (self, input: loginDto)-> Result[AuthResponse]:",
        "detail": "apps.auth.application.services.login_service",
        "documentation": {}
    },
    {
        "label": "tokenGenerator",
        "kind": 6,
        "importPath": "apps.auth.application.token.token_generator",
        "description": "apps.auth.application.token.token_generator",
        "peekOfCode": "class tokenGenerator(ABC):\n    @abstractmethod\n    def generate (self,\n        *,\n        user: UserInDB) -> str:\n        pass",
        "detail": "apps.auth.application.token.token_generator",
        "documentation": {}
    },
    {
        "label": "get_current_active_user",
        "kind": 2,
        "importPath": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "description": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "peekOfCode": "def get_current_active_user(\n    current_user: UserInDB = Depends(get_user_from_token),\n) -> UserInDB | None:\n    if not current_user:\n        raise AuthExceptions.AuthUnauthorizedException()\n    return current_user",
        "detail": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "documentation": {}
    },
    {
        "label": "oauth2_scheme",
        "kind": 5,
        "importPath": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "description": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "peekOfCode": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=f\"{API_PREFIX}/auth/login/\")\nasync def get_user_from_token(\n    *, token: str = Depends(oauth2_scheme), db: Database = Depends(get_database)\n) -> UserInDB | None:\n    user_repo = dbUserRepository(db, UserMapper())\n    user = None\n    try:\n        username = AuthService().get_username_from_token(\n            token=token, secret_key=str(SECRET_KEY)\n        )",
        "detail": "apps.auth.infraestructure.dependecies.auth_dependecies",
        "documentation": {}
    },
    {
        "label": "JWTMeta",
        "kind": 6,
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "peekOfCode": "class JWTMeta(BaseSchema):\n    iss: str = \"ucab.edu.ve\"\n    aud: str = JWT_AUDIENCE\n    iat: float = datetime.timestamp(datetime.utcnow())\n    exp: float = datetime.timestamp(\n        datetime.utcnow() + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    )\nclass JWTCreds(BaseSchema):\n    \"\"\"How we'll identify users\"\"\"\n    username: str",
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "JWTCreds",
        "kind": 6,
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "peekOfCode": "class JWTCreds(BaseSchema):\n    \"\"\"How we'll identify users\"\"\"\n    username: str\nclass JWTPayload(JWTMeta, JWTCreds):\n    \"\"\"\n    JWT Payload right before it's encoded - combine meta and username\n    \"\"\"\n    pass\nclass AccessToken(BaseSchema):\n    access_token: str",
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "JWTPayload",
        "kind": 6,
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "peekOfCode": "class JWTPayload(JWTMeta, JWTCreds):\n    \"\"\"\n    JWT Payload right before it's encoded - combine meta and username\n    \"\"\"\n    pass\nclass AccessToken(BaseSchema):\n    access_token: str\n    token_type: str",
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "AccessToken",
        "kind": 6,
        "importPath": "apps.auth.infraestructure.entities.token",
        "description": "apps.auth.infraestructure.entities.token",
        "peekOfCode": "class AccessToken(BaseSchema):\n    access_token: str\n    token_type: str",
        "detail": "apps.auth.infraestructure.entities.token",
        "documentation": {}
    },
    {
        "label": "jwtGenerato",
        "kind": 6,
        "importPath": "apps.auth.infraestructure.jwt.jwt_generator",
        "description": "apps.auth.infraestructure.jwt.jwt_generator",
        "peekOfCode": "class jwtGenerator (tokenGenerator):\n    def generate(self, *, user: UserInDB) -> str:\n        secret_key: str = str(SECRET_KEY)\n        audience: str = JWT_AUDIENCE\n        expires_in: int = ACCESS_TOKEN_EXPIRE_MINUTES\n        if not user or not isinstance(user, UserInDB):\n            return None\n        creation_time = datetime.now().replace(tzinfo=None)\n        expire_time = creation_time + timedelta(minutes=expires_in)\n        jwt_meta = JWTMeta(",
        "detail": "apps.auth.infraestructure.jwt.jwt_generator",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "kind": 5,
        "importPath": "apps.auth.infraestructure.routes.auth_routes",
        "description": "apps.auth.infraestructure.routes.auth_routes",
        "peekOfCode": "auth_router = APIRouter(\n    prefix=\"/auth\",\n    tags=[\"auth\"],\n    responses={404: {\"description\": \"Not found\"}},\n)\n@auth_router.post(\"/login\", response_model=AuthResponse, name=\"auth:login\")\nasync def login(\n    form_data: OAuth2PasswordRequestForm = Depends(OAuth2PasswordRequestForm),\n    db: Database = Depends(get_database),\n):",
        "detail": "apps.auth.infraestructure.routes.auth_routes",
        "documentation": {}
    },
    {
        "label": "AuthService",
        "kind": 6,
        "importPath": "apps.auth.infraestructure.service.auth_services",
        "description": "apps.auth.infraestructure.service.auth_services",
        "peekOfCode": "class AuthService:\n    def get_username_from_token(self, token: str, secret_key: str) -> str | None:\n            try:\n                decoded_token = jwt.decode(\n                    token,\n                    str(secret_key),\n                    audience=JWT_AUDIENCE,\n                    algorithms=[JWT_ALGORITHM],\n                )\n                payload = JWTPayload(**decoded_token)",
        "detail": "apps.auth.infraestructure.service.auth_services",
        "documentation": {}
    },
    {
        "label": "pwd_context",
        "kind": 5,
        "importPath": "apps.auth.infraestructure.service.auth_services",
        "description": "apps.auth.infraestructure.service.auth_services",
        "peekOfCode": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\nclass AuthService:\n    def get_username_from_token(self, token: str, secret_key: str) -> str | None:\n            try:\n                decoded_token = jwt.decode(\n                    token,\n                    str(secret_key),\n                    audience=JWT_AUDIENCE,\n                    algorithms=[JWT_ALGORITHM],\n                )",
        "detail": "apps.auth.infraestructure.service.auth_services",
        "documentation": {}
    },
    {
        "label": "CreateIngredientDt",
        "kind": 6,
        "importPath": "apps.ingredients.application.dto.create_ingredient_dto",
        "description": "apps.ingredients.application.dto.create_ingredient_dto",
        "peekOfCode": "class CreateIngredientDto (BaseModel):\n    name: str\n    quantity: int",
        "detail": "apps.ingredients.application.dto.create_ingredient_dto",
        "documentation": {}
    },
    {
        "label": "ModifyIngredientQuantityDto",
        "kind": 6,
        "importPath": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "description": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "peekOfCode": "class ModifyIngredientQuantityDto(BaseModel):\n    ingredient_id: UUID\n    quantity: float",
        "detail": "apps.ingredients.application.dto.modify_ingredient_quantity_dto",
        "documentation": {}
    },
    {
        "label": "IngredientsNotFoundApplicatonError",
        "kind": 6,
        "importPath": "apps.ingredients.application.errors.ingredients_not_found",
        "description": "apps.ingredients.application.errors.ingredients_not_found",
        "peekOfCode": "class IngredientsNotFoundApplicatonError(ApplicationError):\n    def __init__(self, ingredient_id: IngredientId):\n        super().__init__(f\"ingrediente con el id {ingredient_id.value} no fue encontrado\", 404, self.__class__.__name__)",
        "detail": "apps.ingredients.application.errors.ingredients_not_found",
        "documentation": {}
    },
    {
        "label": "CreateIngredientApplicationService",
        "kind": 6,
        "importPath": "apps.ingredients.application.services.create_ingredient",
        "description": "apps.ingredients.application.services.create_ingredient",
        "peekOfCode": "class CreateIngredientApplicationService(ApplicationService[CreateIngredientDto, str]):\n    def __init__(self, ingredient_repository: IngredientRepository, event_handler: EventHandler):\n        self.ingredient_repository = ingredient_repository\n        self.event_handler = event_handler\n    async def execute(self, input: CreateIngredientDto) -> Awaitable[Result[str]]:\n        ingredient = Ingredient(IngredientId(str(uuid4())), IngredientName(input.name), IngredientQuantity(input.quantity))\n        await self.event_handler.publish_events(ingredient.pull_events())\n        ingredient = await self.ingredient_repository.save_ingredient(ingredient)\n        return Result[str].success(value=\"ingrediente guardado\") # type: ignore",
        "detail": "apps.ingredients.application.services.create_ingredient",
        "documentation": {}
    },
    {
        "label": "EgressIngredientApplicationService",
        "kind": 6,
        "importPath": "apps.ingredients.application.services.egress_ingredient",
        "description": "apps.ingredients.application.services.egress_ingredient",
        "peekOfCode": "class EgressIngredientApplicationService(ApplicationService[ModifyIngredientQuantityDto, Ingredient]):\n    def __init__(self, ingredient_repository: IngredientRepository, event_handler: EventHandler):\n        self.ingredient_repository = ingredient_repository\n        self.event_handler = event_handler\n    async def execute(self, input: ModifyIngredientQuantityDto) -> Awaitable[Result[str]]:\n        ingredient = await self.ingredient_repository.get_ingredient_by_id(IngredientId(input.ingredient_id))\n        if ingredient is None:\n            return Result[Ingredient].failure(\n                error=IngredientsNotFoundApplicatonError(input)\n            ) # type: ignore",
        "detail": "apps.ingredients.application.services.egress_ingredient",
        "documentation": {}
    },
    {
        "label": "GetIngredientApplicationService",
        "kind": 6,
        "importPath": "apps.ingredients.application.services.get_ingredient",
        "description": "apps.ingredients.application.services.get_ingredient",
        "peekOfCode": "class GetIngredientApplicationService(ApplicationService[IngredientId, Ingredient]):\n    def __init__(self, ingredient_repository: IngredientRepository):\n        self.ingredient_repository = ingredient_repository\n    async def execute(self, input: IngredientId) -> Awaitable[Result[Ingredient]]:\n        ingredient = await self.ingredient_repository.get_ingredient_by_id(input)\n        if ingredient is None:\n            return Result[Ingredient].failure(\n                error=IngredientsNotFoundApplicatonError(input)\n            ) # type: ignore\n        return Result[Ingredient].success(value=ingredient) # type: ignore",
        "detail": "apps.ingredients.application.services.get_ingredient",
        "documentation": {}
    },
    {
        "label": "IngressIngredientApplicationService",
        "kind": 6,
        "importPath": "apps.ingredients.application.services.ingress_ingredient",
        "description": "apps.ingredients.application.services.ingress_ingredient",
        "peekOfCode": "class IngressIngredientApplicationService(ApplicationService[ModifyIngredientQuantityDto, Ingredient]):\n    def __init__(self, ingredient_repository: IngredientRepository, event_handler: EventHandler):\n        self.ingredient_repository = ingredient_repository\n        self.event_handler = event_handler\n    async def execute(self, input: ModifyIngredientQuantityDto) -> Awaitable[Result[str]]:\n        ingredient = await self.ingredient_repository.get_ingredient_by_id(IngredientId(input.ingredient_id))\n        if ingredient is None:\n            return Result[Ingredient].failure(\n                error=IngredientsNotFoundApplicatonError(input)\n            ) # type: ignore",
        "detail": "apps.ingredients.application.services.ingress_ingredient",
        "documentation": {}
    },
    {
        "label": "IngredientCreatedEvent",
        "kind": 6,
        "importPath": "apps.ingredients.domain.events.ingredient_created",
        "description": "apps.ingredients.domain.events.ingredient_created",
        "peekOfCode": "class IngredientCreatedEvent(DomainEvent):\n    def __init__(self, ingredient_id: IngredientId, ingredient_name: IngredientName, ingredient_quantity: IngredientQuantity) -> None:\n        super().__init__()\n        self.ingredient_id = ingredient_id\n        self.ingredient_name = ingredient_name\n        self.ingredients_quantity = ingredient_quantity",
        "detail": "apps.ingredients.domain.events.ingredient_created",
        "documentation": {}
    },
    {
        "label": "IngredientQuantityDownEvent",
        "kind": 6,
        "importPath": "apps.ingredients.domain.events.ingredient_quantity_down",
        "description": "apps.ingredients.domain.events.ingredient_quantity_down",
        "peekOfCode": "class IngredientQuantityDownEvent(DomainEvent):\n    def __init__(self, ingredient_id: IngredientId, quantity_rested: IngredientQuantity) -> None:\n        super().__init__()\n        self.ingredient_id = ingredient_id\n        self.quantity_rested = quantity_rested",
        "detail": "apps.ingredients.domain.events.ingredient_quantity_down",
        "documentation": {}
    },
    {
        "label": "IngredientQuantityUpEvent",
        "kind": 6,
        "importPath": "apps.ingredients.domain.events.ingredient_quantity_up",
        "description": "apps.ingredients.domain.events.ingredient_quantity_up",
        "peekOfCode": "class IngredientQuantityUpEvent(DomainEvent):\n    def __init__(self, ingredient_id: IngredientId, quantity_added: IngredientQuantity) -> None:\n        super().__init__()\n        self.ingredient_id = ingredient_id\n        self.quantity_added = quantity_added",
        "detail": "apps.ingredients.domain.events.ingredient_quantity_up",
        "documentation": {}
    },
    {
        "label": "IngredientIdNotValid",
        "kind": 6,
        "importPath": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "peekOfCode": "class IngredientIdNotValid(DomainException):\n        def __init__(self): \n            msg = \"Id del ingrediente no valido\"\n            super().__init__(self,  msg, 400, self.__class__.__name__)",
        "detail": "apps.ingredients.domain.exceptions.ingredient_id_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientNameNotValid",
        "kind": 6,
        "importPath": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "peekOfCode": "class IngredientNameNotValid(DomainException):\n        def __init__(self): \n            msg = \"Nombre del ingrediente no valido\"\n            super().__init__(self,  msg, 400, self.__class__.__name__)",
        "detail": "apps.ingredients.domain.exceptions.ingredient_name_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientQuantityNotValid",
        "kind": 6,
        "importPath": "apps.ingredients.domain.exceptions.ingredient_quantity_not_valid_exception",
        "description": "apps.ingredients.domain.exceptions.ingredient_quantity_not_valid_exception",
        "peekOfCode": "class IngredientQuantityNotValid(DomainException):\n        def __init__(self): \n            msg = \"cantidad del ingrediente no valida\"\n            super().__init__(self,  msg, 400, self.__class__.__name__)",
        "detail": "apps.ingredients.domain.exceptions.ingredient_quantity_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "IngredientRepository",
        "kind": 6,
        "importPath": "apps.ingredients.domain.repositories.ingredient_repository",
        "description": "apps.ingredients.domain.repositories.ingredient_repository",
        "peekOfCode": "class IngredientRepository:\n    @abstractmethod\n    def get_ingredient_by_id(self, id: IngredientId) -> Awaitable[Optional[Ingredient]]:\n        pass\n    @abstractmethod\n    def save_ingredient(self, ingredient: Ingredient) -> Awaitable[None]:\n        pass",
        "detail": "apps.ingredients.domain.repositories.ingredient_repository",
        "documentation": {}
    },
    {
        "label": "IngredientI",
        "kind": 6,
        "importPath": "apps.ingredients.domain.value_objects.ingredient_id",
        "description": "apps.ingredients.domain.value_objects.ingredient_id",
        "peekOfCode": "class IngredientId (ValueObject[UUID]):\n    def __init__ (self, value: UUID):\n        super().__init__(value)\n        self.ensureValidState()\n    def equals(self, other: ValueObject[UUID]) -> bool:\n        return self.value == other.value    \n    def ensureValidState (self):\n        if (self.value == None):\n            raise IngredientIdNotValid()",
        "detail": "apps.ingredients.domain.value_objects.ingredient_id",
        "documentation": {}
    },
    {
        "label": "IngredientNam",
        "kind": 6,
        "importPath": "apps.ingredients.domain.value_objects.ingredient_name",
        "description": "apps.ingredients.domain.value_objects.ingredient_name",
        "peekOfCode": "class IngredientName (ValueObject[str]):\n    def __init__ (self, value: str):\n        super().__init__(value)\n        self.ensureValidState()\n    def equals(self, other: ValueObject[str]) -> bool:\n        return self.value.strip() == other.value.strip()    \n    def ensureValidState (self):\n        if (self.value == None):\n            raise IngredientNameNotValid()",
        "detail": "apps.ingredients.domain.value_objects.ingredient_name",
        "documentation": {}
    },
    {
        "label": "IngredientQuantit",
        "kind": 6,
        "importPath": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "description": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "peekOfCode": "class IngredientQuantity (ValueObject[float]):\n    def __init__ (self, value: float):\n        super().__init__(value)\n        self.ensureValidState()\n    def equals(self, other: ValueObject[float]) -> bool:\n        return self.value == other.value    \n    def ensureValidState (self):\n        if (self.value == None or self.value < 0):\n            raise IngredientQuantityNotValid()",
        "detail": "apps.ingredients.domain.value_objects.ingredient_quantity",
        "documentation": {}
    },
    {
        "label": "Ingredien",
        "kind": 6,
        "importPath": "apps.ingredients.domain.ingredient",
        "description": "apps.ingredients.domain.ingredient",
        "peekOfCode": "class Ingredient (Aggregate[IngredientId]):\n    def __init__(self, id: IngredientId, name: IngredientName, quantity: IngredientQuantity) -> None:\n        super().__init__(id)\n        self.name = name\n        self.quantity = quantity\n        self.on(IngredientCreatedEvent(id, name, quantity))\n    def validate_state(self) -> None:\n        self.id.ensureValidState()\n        self.name.ensureValidState()\n        self.quantity.ensureValidState()",
        "detail": "apps.ingredients.domain.ingredient",
        "documentation": {}
    },
    {
        "label": "IngredientInD",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.db_entity.ingredient_in_db",
        "description": "apps.ingredients.infrastructure.db_entity.ingredient_in_db",
        "peekOfCode": "class IngredientInDB (BaseSchema):\n    id: UUID\n    name: str\n    quantity: float",
        "detail": "apps.ingredients.infrastructure.db_entity.ingredient_in_db",
        "documentation": {}
    },
    {
        "label": "CreateIngredientEntr",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.entries.create_ingredient_entry",
        "description": "apps.ingredients.infrastructure.entries.create_ingredient_entry",
        "peekOfCode": "class CreateIngredientEntry (BaseModel):\n    name: str\n    quantity: float",
        "detail": "apps.ingredients.infrastructure.entries.create_ingredient_entry",
        "documentation": {}
    },
    {
        "label": "ModifyQuantityEntr",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.entries.modify_quantity_entry",
        "description": "apps.ingredients.infrastructure.entries.modify_quantity_entry",
        "peekOfCode": "class ModifyQuantityEntry (BaseModel):\n    quantity: float",
        "detail": "apps.ingredients.infrastructure.entries.modify_quantity_entry",
        "documentation": {}
    },
    {
        "label": "IngredientMapper",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "description": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "peekOfCode": "class IngredientMapper(Mapper[Ingredient, dict[str, str]]):\n    def __init__(self) -> None:\n        super().__init__()\n    def from_domain_to_persistence(self, domain_entity: Ingredient) -> dict[str, str]:\n        return {\n            'id': domain_entity.id.value,\n            'name': domain_entity.name.value,\n            'quantity': domain_entity.quantity.value\n        }\n    def from_persistence_to_domain(self, persistence_entity: dict[str, str]) -> Ingredient:",
        "detail": "apps.ingredients.infrastructure.mappers.ingredient_mapper",
        "documentation": {}
    },
    {
        "label": "GET_INGREDIENT_BY_ID",
        "kind": 5,
        "importPath": "apps.ingredients.infrastructure.queries.ingredients_queries",
        "description": "apps.ingredients.infrastructure.queries.ingredients_queries",
        "peekOfCode": "GET_INGREDIENT_BY_ID = \"\"\"\n    SELECT ing.id, ing.name, ing.quantity\n    FROM ingredients AS ing\n    WHERE ing.id = :id;\n\"\"\"\nINSERT_INGREDIENT = \"\"\"\n    INSERT INTO ingredients (id, name, quantity)\n    VALUES (:id, :name, :quantity) ON CONFLICT (id) DO UPDATE SET name = :name, quantity = :quantity;\n\"\"\"",
        "detail": "apps.ingredients.infrastructure.queries.ingredients_queries",
        "documentation": {}
    },
    {
        "label": "INSERT_INGREDIENT",
        "kind": 5,
        "importPath": "apps.ingredients.infrastructure.queries.ingredients_queries",
        "description": "apps.ingredients.infrastructure.queries.ingredients_queries",
        "peekOfCode": "INSERT_INGREDIENT = \"\"\"\n    INSERT INTO ingredients (id, name, quantity)\n    VALUES (:id, :name, :quantity) ON CONFLICT (id) DO UPDATE SET name = :name, quantity = :quantity;\n\"\"\"",
        "detail": "apps.ingredients.infrastructure.queries.ingredients_queries",
        "documentation": {}
    },
    {
        "label": "DbIngredientsRepositor",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.repositories.db_ingredients_repository",
        "description": "apps.ingredients.infrastructure.repositories.db_ingredients_repository",
        "peekOfCode": "class DbIngredientsRepository (IngredientRepository):\n    def __init__(self, db: Database, ingredient_mapper: IngredientMapper) -> None:\n        self.db=db\n        self.ingredientMapper = ingredient_mapper\n        super().__init__()\n    async def get_ingredient_by_id(self, id: IngredientId) -> Awaitable[Ingredient | None]:\n        from apps.ingredients.infrastructure.queries.ingredients_queries import GET_INGREDIENT_BY_ID\n        values = {\"id\": id.value}\n        record = await self.db.fetch_one(query=GET_INGREDIENT_BY_ID, values=values)\n        if not record:",
        "detail": "apps.ingredients.infrastructure.repositories.db_ingredients_repository",
        "documentation": {}
    },
    {
        "label": "GetIngredientResponse",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "description": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "peekOfCode": "class GetIngredientResponse(BaseSchema):\n    id: UUID\n    name: str\n    quantity: float\nclass SaveIngredientResponse(BaseSchema):\n    response: str",
        "detail": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "documentation": {}
    },
    {
        "label": "SaveIngredientResponse",
        "kind": 6,
        "importPath": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "description": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "peekOfCode": "class SaveIngredientResponse(BaseSchema):\n    response: str",
        "detail": "apps.ingredients.infrastructure.responses.ingredients_responses",
        "documentation": {}
    },
    {
        "label": "ingredient_router",
        "kind": 5,
        "importPath": "apps.ingredients.infrastructure.routes.ingredients_routes",
        "description": "apps.ingredients.infrastructure.routes.ingredients_routes",
        "peekOfCode": "ingredient_router = APIRouter(\n    prefix=\"/ingredient\",\n    tags=[\"ingredient\"],\n    responses={404: {\"description\": \"Not found\"}},\n)\n@ingredient_router.get(\"/get/{id}\", response_model=GetIngredientResponse, name=\"ingredient:getById\")\nasync def getIngredientById(\n    id: UUID,\n    db: Database = Depends(get_database),\n    current_user: UserInDB = Depends(get_current_active_user),",
        "detail": "apps.ingredients.infrastructure.routes.ingredients_routes",
        "documentation": {}
    },
    {
        "label": "StoreCreatedEvent",
        "kind": 6,
        "importPath": "apps.store.domain.events.store_created",
        "description": "apps.store.domain.events.store_created",
        "peekOfCode": "class StoreCreatedEvent(DomainEvent):\n    def __init__(self, store_id: StoreId, store_name: StoreName, ingredients: List[IngredientId]) -> None:\n        super().__init__()\n        self.store_id = store_id\n        self.store_name = store_name\n        self.ingredients = ingredients",
        "detail": "apps.store.domain.events.store_created",
        "documentation": {}
    },
    {
        "label": "InventoryIdNotValid",
        "kind": 6,
        "importPath": "apps.store.domain.exceptions.inventory_id_not_valid_exception",
        "description": "apps.store.domain.exceptions.inventory_id_not_valid_exception",
        "peekOfCode": "class InventoryIdNotValid(DomainException):\n        def __init__(self): \n            msg = \"Id del inventario no valido\"\n            super().__init__(self,  msg, 400, self.__class__.__name__)",
        "detail": "apps.store.domain.exceptions.inventory_id_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "InventoryIdNotValid",
        "kind": 6,
        "importPath": "apps.store.domain.exceptions.inventory_name_not_valid_exception",
        "description": "apps.store.domain.exceptions.inventory_name_not_valid_exception",
        "peekOfCode": "class InventoryIdNotValid(DomainException):\n        def __init__(self): \n            msg = \"Id del inventario no valido\"\n            super().__init__(self,  msg, 400, self.__class__.__name__)",
        "detail": "apps.store.domain.exceptions.inventory_name_not_valid_exception",
        "documentation": {}
    },
    {
        "label": "StoreRepository",
        "kind": 6,
        "importPath": "apps.store.domain.repositories.store_repository",
        "description": "apps.store.domain.repositories.store_repository",
        "peekOfCode": "class StoreRepository:\n    @abstractmethod\n    def get_store_by_id(self, id: StoreId) -> Awaitable[Optional[Store]]:\n        pass",
        "detail": "apps.store.domain.repositories.store_repository",
        "documentation": {}
    },
    {
        "label": "StoreI",
        "kind": 6,
        "importPath": "apps.store.domain.value_objects.store_id",
        "description": "apps.store.domain.value_objects.store_id",
        "peekOfCode": "class StoreId (ValueObject[UUID]):\n    def __init__ (self, value: UUID):\n        super().__init__(value)\n        self.ensureValidState()\n    def equals(self, other: ValueObject[UUID]) -> bool:\n        return self.value == other.value    \n    def ensureValidState (self):\n        if (self.value == None):\n            raise IngredientIdNotValid()",
        "detail": "apps.store.domain.value_objects.store_id",
        "documentation": {}
    },
    {
        "label": "StoreNam",
        "kind": 6,
        "importPath": "apps.store.domain.value_objects.store_name",
        "description": "apps.store.domain.value_objects.store_name",
        "peekOfCode": "class StoreName (ValueObject[str]):\n    def __init__ (self, value: str):\n        super().__init__(value)\n        self.ensureValidState()\n    def equals(self, other: ValueObject[str]) -> bool:\n        return self.value.strip() == other.value.strip()    \n    def ensureValidState (self):\n        if (self.value == None):\n            raise IngredientNameNotValid()",
        "detail": "apps.store.domain.value_objects.store_name",
        "documentation": {}
    },
    {
        "label": "Inventor",
        "kind": 6,
        "importPath": "apps.store.domain.store",
        "description": "apps.store.domain.store",
        "peekOfCode": "class Inventory (Aggregate[StoreId]):\n    def __init__(self, id: StoreId, name: StoreName, ingredients: List[IngredientId]) -> None:\n        super().__init__(id)\n        self.name = name\n        self.ingredients = ingredients\n        self.on(StoreCreatedEvent(id, name, ingredients))\n    def validate_state(self) -> None:\n        self.id.ensureValidState()\n        self.name.ensureValidState()",
        "detail": "apps.store.domain.store",
        "documentation": {}
    },
    {
        "label": "StoreInD",
        "kind": 6,
        "importPath": "apps.store.infrastructure.db_entity.store_in_db",
        "description": "apps.store.infrastructure.db_entity.store_in_db",
        "peekOfCode": "class StoreInDb (BaseSchema):\n    id: UUID\n    name: str\n    ingredients: list[UUID]",
        "detail": "apps.store.infrastructure.db_entity.store_in_db",
        "documentation": {}
    },
    {
        "label": "UserNotFoundApplicatonError",
        "kind": 6,
        "importPath": "apps.user.application.errors.user_not_found",
        "description": "apps.user.application.errors.user_not_found",
        "peekOfCode": "class UserNotFoundApplicatonError(ApplicationError):\n    def __init__(self, user_id: UserId):\n        super().__init__(f\"usuario con el id {user_id.value} no fue encontrado\", 404, self.__class__.__name__)",
        "detail": "apps.user.application.errors.user_not_found",
        "documentation": {}
    },
    {
        "label": "GetUserApplicationService",
        "kind": 6,
        "importPath": "apps.user.application.services.get_user",
        "description": "apps.user.application.services.get_user",
        "peekOfCode": "class GetUserApplicationService(ApplicationService[UserId, User]):\n    def __init__(self, user_repository: UserRepository):\n        self.user_repository = user_repository\n    async def execute(self, input: UserId) -> Awaitable[Result[User]]:\n        user = await self.user_repository.get_user_by_id(input)\n        if user is None:\n            return Result[User].failure(\n                error=UserNotFoundApplicatonError(input)\n            ) # type: ignore\n        return Result[User].success(value=user) # type: ignore",
        "detail": "apps.user.application.services.get_user",
        "documentation": {}
    },
    {
        "label": "UserCreatedEvent",
        "kind": 6,
        "importPath": "apps.user.domain.events.user_created",
        "description": "apps.user.domain.events.user_created",
        "peekOfCode": "class UserCreatedEvent(DomainEvent):\n    def __init__(self, user_id: UserId, user_name: UserName) -> None:\n        super().__init__()\n        self.user_id = user_id\n        self.user_name = user_name",
        "detail": "apps.user.domain.events.user_created",
        "documentation": {}
    },
    {
        "label": "UserCreatedEvent",
        "kind": 6,
        "importPath": "apps.user.domain.exceptions.events.user_created",
        "description": "apps.user.domain.exceptions.events.user_created",
        "peekOfCode": "class UserCreatedEvent(DomainEvent):\n    def __init__(self, user_id: UserId, user_name: UserName) -> None:\n        super().__init__()\n        self.user_id = user_id\n        self.user_name = user_name",
        "detail": "apps.user.domain.exceptions.events.user_created",
        "documentation": {}
    },
    {
        "label": "InvalidUserException",
        "kind": 6,
        "importPath": "apps.user.domain.exceptions.invalid_user",
        "description": "apps.user.domain.exceptions.invalid_user",
        "peekOfCode": "class InvalidUserException(DomainException):\n    def __init__(self):\n        super().__init__(\"usuario no valido\", 400, self.__class__.__name__)",
        "detail": "apps.user.domain.exceptions.invalid_user",
        "documentation": {}
    },
    {
        "label": "UserRepository",
        "kind": 6,
        "importPath": "apps.user.domain.repositories.user_repository",
        "description": "apps.user.domain.repositories.user_repository",
        "peekOfCode": "class UserRepository:\n    @abstractmethod\n    def get_user_by_id(self, id: UserId) -> Awaitable[Optional[User]]:\n        pass",
        "detail": "apps.user.domain.repositories.user_repository",
        "documentation": {}
    },
    {
        "label": "UserId",
        "kind": 6,
        "importPath": "apps.user.domain.value_objects.user_id",
        "description": "apps.user.domain.value_objects.user_id",
        "peekOfCode": "class UserId(ValueObject[UUID]):\n    def __init__(self, value: UUID) -> None:\n        super().__init__(value)\n    def equals(self, other: 'UserId') -> bool:\n        return self.value == other.value",
        "detail": "apps.user.domain.value_objects.user_id",
        "documentation": {}
    },
    {
        "label": "UserName",
        "kind": 6,
        "importPath": "apps.user.domain.value_objects.user_name",
        "description": "apps.user.domain.value_objects.user_name",
        "peekOfCode": "class UserName(ValueObject[str]):\n    def __init__(self, value: str) -> None:\n        super().__init__(value)\n    def equals(self, other: 'UserName') -> bool:\n        names = self.value.split()\n        other_names = other.value.split()\n        if len(names) != len(other_names):\n            return False\n        result = True\n        for i in range(len(names)):",
        "detail": "apps.user.domain.value_objects.user_name",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "apps.user.domain.user",
        "description": "apps.user.domain.user",
        "peekOfCode": "class User(Aggregate[UserId]):\n    def __init__(self, id: UserId, name: UserName) -> None:\n        super().__init__(id)\n        self._name = name\n        self.on(UserCreatedEvent(id, name))\n    @property\n    def name(self) -> UserName:\n        return self._name\n    def validate_state(self) -> None:\n        if not self._name or not self._id:",
        "detail": "apps.user.domain.user",
        "documentation": {}
    },
    {
        "label": "roleEnu",
        "kind": 6,
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "peekOfCode": "class roleEnum (str,Enum):\n    administrador = \"administrador\"\n    camarero = \"camarero\"\n    chef = \"chef\"\n    cliente = \"cliente\"\nclass UserInDB (BaseSchema):\n    id: UUID\n    name: str\n    password: str\n    role: roleEnum",
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserInD",
        "kind": 6,
        "importPath": "apps.user.infrastructure.db_entity.user_in_db",
        "description": "apps.user.infrastructure.db_entity.user_in_db",
        "peekOfCode": "class UserInDB (BaseSchema):\n    id: UUID\n    name: str\n    password: str\n    role: roleEnum\n    username: str",
        "detail": "apps.user.infrastructure.db_entity.user_in_db",
        "documentation": {}
    },
    {
        "label": "UserMapper",
        "kind": 6,
        "importPath": "apps.user.infrastructure.mappers.user_mapper",
        "description": "apps.user.infrastructure.mappers.user_mapper",
        "peekOfCode": "class UserMapper(Mapper[User, dict[str, str]]):\n    def __init__(self) -> None:\n        super().__init__()\n    def from_domain_to_persistence(self, domain_entity: User) -> dict[str, str]:\n        return {\n            'id': domain_entity.id.value,\n            'name': domain_entity.name.value\n        }\n    def from_persistence_to_domain(self, persistence_entity: dict[str, str]) -> User:\n        return User(",
        "detail": "apps.user.infrastructure.mappers.user_mapper",
        "documentation": {}
    },
    {
        "label": "GET_USER_BY_USERNAME",
        "kind": 5,
        "importPath": "apps.user.infrastructure.queries.user_queries",
        "description": "apps.user.infrastructure.queries.user_queries",
        "peekOfCode": "GET_USER_BY_USERNAME = \"\"\"\n    SELECT us.id, us.name, us.username, us.password, us.role\n    FROM users AS us\n    WHERE us.username = :username;\n\"\"\"\nGET_USER_BY_ID = \"\"\"\n    SELECT us.id, us.name, us.username, us.password, us.role\n    FROM users AS us\n    WHERE us.id = :id;\n\"\"\"",
        "detail": "apps.user.infrastructure.queries.user_queries",
        "documentation": {}
    },
    {
        "label": "GET_USER_BY_ID",
        "kind": 5,
        "importPath": "apps.user.infrastructure.queries.user_queries",
        "description": "apps.user.infrastructure.queries.user_queries",
        "peekOfCode": "GET_USER_BY_ID = \"\"\"\n    SELECT us.id, us.name, us.username, us.password, us.role\n    FROM users AS us\n    WHERE us.id = :id;\n\"\"\"",
        "detail": "apps.user.infrastructure.queries.user_queries",
        "documentation": {}
    },
    {
        "label": "dbUserRepositor",
        "kind": 6,
        "importPath": "apps.user.infrastructure.repositories.db_user_repository",
        "description": "apps.user.infrastructure.repositories.db_user_repository",
        "peekOfCode": "class dbUserRepository (UserRepository):\n    def __init__(self, db: Database, user_mapper: UserMapper) -> None:\n        self.db=db\n        self.userMapper = user_mapper\n        super().__init__()\n    async def get_user_by_id(self, id: UserId) -> Awaitable[User | None]:\n        from apps.user.infrastructure.queries.user_queries import GET_USER_BY_ID\n        values = {\"id\": id.value}\n        logger.info(values)\n        record = await self.db.fetch_one(query=GET_USER_BY_ID, values=values)",
        "detail": "apps.user.infrastructure.repositories.db_user_repository",
        "documentation": {}
    },
    {
        "label": "GetUserResponse",
        "kind": 6,
        "importPath": "apps.user.infrastructure.responses.user_responses",
        "description": "apps.user.infrastructure.responses.user_responses",
        "peekOfCode": "class GetUserResponse(BaseSchema):\n    id: UUID\n    name: str\n    username: str\n    password: str\n    role: roleEnum",
        "detail": "apps.user.infrastructure.responses.user_responses",
        "documentation": {}
    },
    {
        "label": "user_router",
        "kind": 5,
        "importPath": "apps.user.infrastructure.routes.user_routes",
        "description": "apps.user.infrastructure.routes.user_routes",
        "peekOfCode": "user_router = APIRouter(\n    prefix=\"/user\",\n    tags=[\"user\"],\n    responses={404: {\"description\": \"Not found\"}},\n)\n@user_router.post(\"/get\", response_model=GetUserResponse, name=\"user:getById\")\nasync def getUserById(\n    db: Database = Depends(get_database),\n    current_user: UserInDB = Depends(get_current_active_user),\n):",
        "detail": "apps.user.infrastructure.routes.user_routes",
        "documentation": {}
    },
    {
        "label": "ExceptionDecorator",
        "kind": 6,
        "importPath": "core.application.decorators.exception_decorator",
        "description": "core.application.decorators.exception_decorator",
        "peekOfCode": "class ExceptionDecorator(ApplicationService[T, R], Generic[T, R]):\n    def __init__(self, service: ApplicationService[T, R]):\n        self._service = service\n    async def execute(self, input: T) -> Result[R]:\n            result = await self._service.execute(input)\n            if result.is_error():\n                logger.info(\"error in service\") \n            return result",
        "detail": "core.application.decorators.exception_decorator",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.application.decorators.exception_decorator",
        "description": "core.application.decorators.exception_decorator",
        "peekOfCode": "T = TypeVar('T')\nR = TypeVar('R')\nclass ExceptionDecorator(ApplicationService[T, R], Generic[T, R]):\n    def __init__(self, service: ApplicationService[T, R]):\n        self._service = service\n    async def execute(self, input: T) -> Result[R]:\n            result = await self._service.execute(input)\n            if result.is_error():\n                logger.info(\"error in service\") \n            return result",
        "detail": "core.application.decorators.exception_decorator",
        "documentation": {}
    },
    {
        "label": "R",
        "kind": 5,
        "importPath": "core.application.decorators.exception_decorator",
        "description": "core.application.decorators.exception_decorator",
        "peekOfCode": "R = TypeVar('R')\nclass ExceptionDecorator(ApplicationService[T, R], Generic[T, R]):\n    def __init__(self, service: ApplicationService[T, R]):\n        self._service = service\n    async def execute(self, input: T) -> Result[R]:\n            result = await self._service.execute(input)\n            if result.is_error():\n                logger.info(\"error in service\") \n            return result",
        "detail": "core.application.decorators.exception_decorator",
        "documentation": {}
    },
    {
        "label": "ApplicationError",
        "kind": 6,
        "importPath": "core.application.errors.application_errors",
        "description": "core.application.errors.application_errors",
        "peekOfCode": "class ApplicationError(Exception):\n    def __init__(self, message: str, code: int, name: str):\n        self.message = message\n        self.code = code\n        self.name = name\n        super().__init__(self.__class__.__name__, self.message, self.code, self.name)",
        "detail": "core.application.errors.application_errors",
        "documentation": {}
    },
    {
        "label": "EventHandler",
        "kind": 6,
        "importPath": "core.application.events.event_handler",
        "description": "core.application.events.event_handler",
        "peekOfCode": "class EventHandler(ABC):\n    @abstractmethod\n    def publish_events(self, events: list[DomainEvent]) -> None:\n        pass\n    @abstractmethod\n    def subscribe(\n        self, \n        event: DomainEvent, \n        callback: Callable[[DomainEvent], Awaitable[None]]\n    ) -> Callable[[], None]:",
        "detail": "core.application.events.event_handler",
        "documentation": {}
    },
    {
        "label": "Mapper",
        "kind": 6,
        "importPath": "core.application.mappers.mapper",
        "description": "core.application.mappers.mapper",
        "peekOfCode": "class Mapper(ABC, Generic[D, P]):\n    @abstractmethod\n    def from_domain_to_persistence(self, domain_entity: D) -> P:\n        pass\n    @abstractmethod\n    def from_persistence_to_domain(self, persistence_entity: P) -> D:\n        pass",
        "detail": "core.application.mappers.mapper",
        "documentation": {}
    },
    {
        "label": "D",
        "kind": 5,
        "importPath": "core.application.mappers.mapper",
        "description": "core.application.mappers.mapper",
        "peekOfCode": "D = TypeVar('D', bound=Entity[Any])\nP = TypeVar('P')\nclass Mapper(ABC, Generic[D, P]):\n    @abstractmethod\n    def from_domain_to_persistence(self, domain_entity: D) -> P:\n        pass\n    @abstractmethod\n    def from_persistence_to_domain(self, persistence_entity: P) -> D:\n        pass",
        "detail": "core.application.mappers.mapper",
        "documentation": {}
    },
    {
        "label": "P",
        "kind": 5,
        "importPath": "core.application.mappers.mapper",
        "description": "core.application.mappers.mapper",
        "peekOfCode": "P = TypeVar('P')\nclass Mapper(ABC, Generic[D, P]):\n    @abstractmethod\n    def from_domain_to_persistence(self, domain_entity: D) -> P:\n        pass\n    @abstractmethod\n    def from_persistence_to_domain(self, persistence_entity: P) -> D:\n        pass",
        "detail": "core.application.mappers.mapper",
        "documentation": {}
    },
    {
        "label": "Result",
        "kind": 6,
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "peekOfCode": "class Result(Generic[T]):\n    def __init__(\n        self, \n        value: Optional[T] = None, \n        error: Optional[Exception] = None\n    ) -> None:\n        if(value is None and error is None):\n            raise ValueError(\"Value and error cannot be both None\")\n        if(value is not None and error is not None):\n            raise ValueError(\"Value and error cannot be both not None\")",
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.application.results.result_wrapper",
        "description": "core.application.results.result_wrapper",
        "peekOfCode": "T = TypeVar(\"T\")\nclass Result(Generic[T]):\n    def __init__(\n        self, \n        value: Optional[T] = None, \n        error: Optional[Exception] = None\n    ) -> None:\n        if(value is None and error is None):\n            raise ValueError(\"Value and error cannot be both None\")\n        if(value is not None and error is not None):",
        "detail": "core.application.results.result_wrapper",
        "documentation": {}
    },
    {
        "label": "ApplicationService",
        "kind": 6,
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "peekOfCode": "class ApplicationService(ABC, Generic[T, R]):\n    @abstractmethod\n    def execute(self, input: T) -> Awaitable[Result[R]]:\n        pass",
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "peekOfCode": "T = TypeVar(\"T\")\nR = TypeVar(\"R\")\nclass ApplicationService(ABC, Generic[T, R]):\n    @abstractmethod\n    def execute(self, input: T) -> Awaitable[Result[R]]:\n        pass",
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "R",
        "kind": 5,
        "importPath": "core.application.services.application_service",
        "description": "core.application.services.application_service",
        "peekOfCode": "R = TypeVar(\"R\")\nclass ApplicationService(ABC, Generic[T, R]):\n    @abstractmethod\n    def execute(self, input: T) -> Awaitable[Result[R]]:\n        pass",
        "detail": "core.application.services.application_service",
        "documentation": {}
    },
    {
        "label": "Aggregate",
        "kind": 6,
        "importPath": "core.domain.aggregates.aggregate",
        "description": "core.domain.aggregates.aggregate",
        "peekOfCode": "class Aggregate(ABC, Generic[T], Entity[T]):\n    def __init__(self, id: T) -> None:\n        self._events: list[DomainEvent] = []\n        super().__init__(id)\n    @property\n    def events(self) -> list[DomainEvent]:\n        return self._events\n    @abstractmethod\n    def validate_state(self) -> None:\n        pass",
        "detail": "core.domain.aggregates.aggregate",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.domain.aggregates.aggregate",
        "description": "core.domain.aggregates.aggregate",
        "peekOfCode": "T = TypeVar('T', bound=ValueObject[Any]);\nclass Aggregate(ABC, Generic[T], Entity[T]):\n    def __init__(self, id: T) -> None:\n        self._events: list[DomainEvent] = []\n        super().__init__(id)\n    @property\n    def events(self) -> list[DomainEvent]:\n        return self._events\n    @abstractmethod\n    def validate_state(self) -> None:",
        "detail": "core.domain.aggregates.aggregate",
        "documentation": {}
    },
    {
        "label": "Entity",
        "kind": 6,
        "importPath": "core.domain.entities.entity",
        "description": "core.domain.entities.entity",
        "peekOfCode": "class Entity(Generic[T]):\n    def __init__(self, id: T):\n        self._id = id\n    @property\n    def id(self) -> T:\n        return self._id\n    def equals(self, other: \"Entity[T]\") -> bool:\n        return self._id.equals(other.id)",
        "detail": "core.domain.entities.entity",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.domain.entities.entity",
        "description": "core.domain.entities.entity",
        "peekOfCode": "T = TypeVar(\"T\", bound=ValueObject[Any])\nclass Entity(Generic[T]):\n    def __init__(self, id: T):\n        self._id = id\n    @property\n    def id(self) -> T:\n        return self._id\n    def equals(self, other: \"Entity[T]\") -> bool:\n        return self._id.equals(other.id)",
        "detail": "core.domain.entities.entity",
        "documentation": {}
    },
    {
        "label": "DomainEvent",
        "kind": 6,
        "importPath": "core.domain.events.domain_event",
        "description": "core.domain.events.domain_event",
        "peekOfCode": "class DomainEvent:\n    def __init__(self):\n        self.__event_time = datetime.now()\n    @property\n    def event_time(self) -> datetime:\n        return self.__event_time\n    @property\n    @classmethod\n    def name(cls) -> str:\n        return cls.__name__",
        "detail": "core.domain.events.domain_event",
        "documentation": {}
    },
    {
        "label": "DomainException",
        "kind": 6,
        "importPath": "core.domain.exceptions.domain_exception",
        "description": "core.domain.exceptions.domain_exception",
        "peekOfCode": "class DomainException(Exception):\n    def __init__(self, message: str, code: int, name: str):\n        self.message = message\n        self.name = name\n        self.code = code\n        super().__init__(self.__class__.__name__, self.message, self.code, self.name)",
        "detail": "core.domain.exceptions.domain_exception",
        "documentation": {}
    },
    {
        "label": "DomainService",
        "kind": 6,
        "importPath": "core.domain.services.domain_service",
        "description": "core.domain.services.domain_service",
        "peekOfCode": "class DomainService(ABC, Generic[T, R]):\n    @abstractmethod\n    def execute(self, input: T) -> R:\n        pass",
        "detail": "core.domain.services.domain_service",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.domain.services.domain_service",
        "description": "core.domain.services.domain_service",
        "peekOfCode": "T = TypeVar(\"T\")\nR = TypeVar(\"R\")\nclass DomainService(ABC, Generic[T, R]):\n    @abstractmethod\n    def execute(self, input: T) -> R:\n        pass",
        "detail": "core.domain.services.domain_service",
        "documentation": {}
    },
    {
        "label": "R",
        "kind": 5,
        "importPath": "core.domain.services.domain_service",
        "description": "core.domain.services.domain_service",
        "peekOfCode": "R = TypeVar(\"R\")\nclass DomainService(ABC, Generic[T, R]):\n    @abstractmethod\n    def execute(self, input: T) -> R:\n        pass",
        "detail": "core.domain.services.domain_service",
        "documentation": {}
    },
    {
        "label": "ValueObject",
        "kind": 6,
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "peekOfCode": "class ValueObject(ABC, Generic[T]):\n    def __init__(self, value: T):\n        self.value = value\n        super().__init__()\n    @abstractmethod\n    def equals(self, other: \"ValueObject[T]\") -> bool:\n        pass",
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "core.domain.value_objects.value_object",
        "description": "core.domain.value_objects.value_object",
        "peekOfCode": "T = TypeVar(\"T\")\nclass ValueObject(ABC, Generic[T]):\n    def __init__(self, value: T):\n        self.value = value\n        super().__init__()\n    @abstractmethod\n    def equals(self, other: \"ValueObject[T]\") -> bool:\n        pass",
        "detail": "core.domain.value_objects.value_object",
        "documentation": {}
    },
    {
        "label": "NativeEventHandler",
        "kind": 6,
        "importPath": "core.infrastructure.events.event_handler_native",
        "description": "core.infrastructure.events.event_handler_native",
        "peekOfCode": "class NativeEventHandler(EventHandler):\n  _subscribers: dict[str, list[Callable[[DomainEvent], Awaitable[None]]]]\n  def __init__(self) -> None:\n    self._subscribers = {}\n  async def publish_events(self, events: list[DomainEvent]) -> None:\n    for event in events:\n      event_name = event.__class__.__name__\n      subscribers = self._subscribers.get(event_name, [])\n      for subscriber in subscribers:\n        await subscriber(event)",
        "detail": "core.infrastructure.events.event_handler_native",
        "documentation": {}
    },
    {
        "label": "AppExceptionCase",
        "kind": 6,
        "importPath": "core.infrastructure.utils.app_exceptions",
        "description": "core.infrastructure.utils.app_exceptions",
        "peekOfCode": "class AppExceptionCase(Exception):\n    def __init__(self, status_code: int, msg: str): \n        self.name = self.__class__.__name__\n        self.code = status_code\n        self.message = msg\n    def __str__(self):\n        return (\n            f\"<AppException {self.exception_case} - \"\n            + f\"status_code={self.status_code} - msg={self.msg}>\"\n        )",
        "detail": "core.infrastructure.utils.app_exceptions",
        "documentation": {}
    },
    {
        "label": "convert_date_to_datetime_dict",
        "kind": 2,
        "importPath": "core.infrastructure.utils.convert_date_to_datetime",
        "description": "core.infrastructure.utils.convert_date_to_datetime",
        "peekOfCode": "def convert_date_to_datetime_dict(data: dict) -> dict:\n    if data[\"birthdate\"]:\n        birthdate: date = data.get(\"birthdate\")\n    else:\n        birthdate: date = data.get(\"birth_date\")\n    birth_str = birthdate.isoformat() + \" 00:00:00\"\n    birth_datetime = datetime.strptime(birth_str, \"%Y-%m-%d %H:%M:%S\")\n    if data[\"birthdate\"]:\n        data[\"birthdate\"] = birth_datetime\n    else:",
        "detail": "core.infrastructure.utils.convert_date_to_datetime",
        "documentation": {}
    },
    {
        "label": "convert_date_to_datetime_field",
        "kind": 2,
        "importPath": "core.infrastructure.utils.convert_date_to_datetime",
        "description": "core.infrastructure.utils.convert_date_to_datetime",
        "peekOfCode": "def convert_date_to_datetime_field(birthdate: date) -> datetime:\n    min_time = datetime.min.time()\n    birth_datetime = datetime.combine(birthdate, min_time)\n    return birth_datetime\ndef convert_date_to_datetime_obj(obj: object):\n    if hasattr(obj, \"birthdate\"):\n        birthdate: date = obj.birthdate\n    else:\n        birthdate: date = obj.birth_date\n    birth_str = birthdate.isoformat() + \" 00:00:00\"",
        "detail": "core.infrastructure.utils.convert_date_to_datetime",
        "documentation": {}
    },
    {
        "label": "convert_date_to_datetime_obj",
        "kind": 2,
        "importPath": "core.infrastructure.utils.convert_date_to_datetime",
        "description": "core.infrastructure.utils.convert_date_to_datetime",
        "peekOfCode": "def convert_date_to_datetime_obj(obj: object):\n    if hasattr(obj, \"birthdate\"):\n        birthdate: date = obj.birthdate\n    else:\n        birthdate: date = obj.birth_date\n    birth_str = birthdate.isoformat() + \" 00:00:00\"\n    birth_datetime = datetime.strptime(birth_str, \"%Y-%m-%d %H:%M:%S\")\n    if hasattr(obj, \"birthdate\"):\n        obj.birthdate = birth_datetime\n    else:",
        "detail": "core.infrastructure.utils.convert_date_to_datetime",
        "documentation": {}
    },
    {
        "label": "CryptoAES",
        "kind": 6,
        "importPath": "core.infrastructure.utils.crypto_credentials",
        "description": "core.infrastructure.utils.crypto_credentials",
        "peekOfCode": "class CryptoAES:\n    @classmethod\n    def encrypt(cls, data):\n        cipher = AES.new(AES_KEY.encode(\"utf-8\"), AES.MODE_ECB)\n        encrypted = cipher.encrypt(pad(data.encode(\"utf-8\"), AES_BLOCKSIZE))\n        return b64encode(encrypted).decode(\"utf-8\")\n    @classmethod\n    def decrypt(cls, data_encrypted):\n        data = data_encrypted\n        enc = b64decode(data)",
        "detail": "core.infrastructure.utils.crypto_credentials",
        "documentation": {}
    },
    {
        "label": "debug",
        "kind": 2,
        "importPath": "core.infrastructure.utils.debugger",
        "description": "core.infrastructure.utils.debugger",
        "peekOfCode": "def debug(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        print(f\"Calling {func.__name__} with args={args} kwargs={kwargs}\")\n        result = func(*args, **kwargs)\n        print(f\"{func.__name__} returned {result}\")\n        return result\n    return wrapper",
        "detail": "core.infrastructure.utils.debugger",
        "documentation": {}
    },
    {
        "label": "record_to_dict",
        "kind": 2,
        "importPath": "core.infrastructure.utils.record_to_dict",
        "description": "core.infrastructure.utils.record_to_dict",
        "peekOfCode": "def record_to_dict(record: Any) -> Dict:\n    original = dict(record)\n    in_db = {}\n    for k, v in original.items():\n        if k == \"created_by\" or k == \"updated_by\":\n            v = str(v)\n        in_db[k] = v\n    return in_db",
        "detail": "core.infrastructure.utils.record_to_dict",
        "documentation": {}
    },
    {
        "label": "BaseSchema",
        "kind": 6,
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "peekOfCode": "class BaseSchema(BaseModel):\n    class Config(BaseConfig):\n        allow_population_by_field_name = True\n        orm_mode = True\n# for locale see: https://www.geeksforgeeks.org/how-to-make-a-timezone-aware-datetime-object-in-python/\nclass DateTimeModelMixin(BaseModel):\n    created_at: None | datetime\n    updated_at: None | datetime\n    @validator(\"created_at\", \"updated_at\", pre=True)\n    def default_datetime(cls, value: datetime) -> datetime:",
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "DateTimeModelMixin",
        "kind": 6,
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "peekOfCode": "class DateTimeModelMixin(BaseModel):\n    created_at: None | datetime\n    updated_at: None | datetime\n    @validator(\"created_at\", \"updated_at\", pre=True)\n    def default_datetime(cls, value: datetime) -> datetime:\n        return value or datetime.now(pytz.timezone(\"America/Caracas\"))\nclass IDModelMixin(BaseModel):\n    id: UUID",
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "IDModelMixin",
        "kind": 6,
        "importPath": "core.infrastructure.utils.schemas_base",
        "description": "core.infrastructure.utils.schemas_base",
        "peekOfCode": "class IDModelMixin(BaseModel):\n    id: UUID",
        "detail": "core.infrastructure.utils.schemas_base",
        "documentation": {}
    },
    {
        "label": "short_pagination",
        "kind": 2,
        "importPath": "core.infrastructure.utils.short_pagination",
        "description": "core.infrastructure.utils.short_pagination",
        "peekOfCode": "def short_pagination(page_num: int, page_size: int, data_list: List, route: str) -> Dict:\n    start = (page_num - 1) * page_size\n    end = start + page_size\n    data_length = len(data_list)\n    pages = math.ceil(data_length / page_size)\n    response = {\n        \"data\": data_list[start:end],\n        \"total\": len(data_list),\n        \"count\": page_size,\n        \"pages\": pages,",
        "detail": "core.infrastructure.utils.short_pagination",
        "documentation": {}
    },
    {
        "label": "short_pagination_aps",
        "kind": 2,
        "importPath": "core.infrastructure.utils.short_pagination",
        "description": "core.infrastructure.utils.short_pagination",
        "peekOfCode": "def short_pagination_aps(\n    page_num: int, page_size: int, data_list: List, total_pages: List, route: str\n) -> Dict:\n    start = (page_num - 1) * page_size\n    end = start + page_size\n    total = str(total_pages[0]).split(sep=\"=\")\n    total = total[1]\n    pages = math.ceil(int(total) / page_size)\n    response = {\n        \"data\": data_list,",
        "detail": "core.infrastructure.utils.short_pagination",
        "documentation": {}
    },
    {
        "label": "CustomJSONEncoder",
        "kind": 6,
        "importPath": "core.infrastructure.utils.utils_test",
        "description": "core.infrastructure.utils.utils_test",
        "peekOfCode": "class CustomJSONEncoder(json.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, datetime):\n            return serialize_datetime(o)\n        return super().default(o)",
        "detail": "core.infrastructure.utils.utils_test",
        "documentation": {}
    },
    {
        "label": "serialize_datetime",
        "kind": 2,
        "importPath": "core.infrastructure.utils.utils_test",
        "description": "core.infrastructure.utils.utils_test",
        "peekOfCode": "def serialize_datetime(o: datetime) -> str:\n    return o.isoformat()\nclass CustomJSONEncoder(json.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, datetime):\n            return serialize_datetime(o)\n        return super().default(o)",
        "detail": "core.infrastructure.utils.utils_test",
        "documentation": {}
    },
    {
        "label": "is_authorized",
        "kind": 2,
        "importPath": "core.infrastructure.utils.verify_auth",
        "description": "core.infrastructure.utils.verify_auth",
        "peekOfCode": "def is_authorized(current_user: UserInDB, endpoint: str) -> bool:\n    if current_user.is_superadmin or endpoint in current_user.permissions:\n        return True\n    else:\n        return False",
        "detail": "core.infrastructure.utils.verify_auth",
        "documentation": {}
    },
    {
        "label": "is_valid_uuid",
        "kind": 2,
        "importPath": "core.infrastructure.utils.verify_uuid",
        "description": "core.infrastructure.utils.verify_uuid",
        "peekOfCode": "def is_valid_uuid(value):\n    try:\n        uuid.UUID(str(value))\n        return True\n    except ValueError:\n        return False",
        "detail": "core.infrastructure.utils.verify_uuid",
        "documentation": {}
    },
    {
        "label": "get_db",
        "kind": 2,
        "importPath": "db.db_base",
        "description": "db.db_base",
        "peekOfCode": "def get_db() -> Database:\n    database_url = str(config.DATABASE_URL)\n    options = {\n        \"min_size\": config.DB_MIN_SIZE,\n        \"max_size\": config.DB_MAX_SIZE,\n        \"force_rollback\": config.DB_FORCE_ROLL_BACK,\n    }\n    return Database(database_url, **options)\ndatabase = get_db()\nBase = declarative_base()",
        "detail": "db.db_base",
        "documentation": {}
    },
    {
        "label": "database",
        "kind": 5,
        "importPath": "db.db_base",
        "description": "db.db_base",
        "peekOfCode": "database = get_db()\nBase = declarative_base()\nmetadata = Base.metadata\nengine = create_engine(str(config.DATABASE_URL))",
        "detail": "db.db_base",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "db.db_base",
        "description": "db.db_base",
        "peekOfCode": "Base = declarative_base()\nmetadata = Base.metadata\nengine = create_engine(str(config.DATABASE_URL))",
        "detail": "db.db_base",
        "documentation": {}
    },
    {
        "label": "metadata",
        "kind": 5,
        "importPath": "db.db_base",
        "description": "db.db_base",
        "peekOfCode": "metadata = Base.metadata\nengine = create_engine(str(config.DATABASE_URL))",
        "detail": "db.db_base",
        "documentation": {}
    },
    {
        "label": "engine",
        "kind": 5,
        "importPath": "db.db_base",
        "description": "db.db_base",
        "peekOfCode": "engine = create_engine(str(config.DATABASE_URL))",
        "detail": "db.db_base",
        "documentation": {}
    },
    {
        "label": "get_database",
        "kind": 2,
        "importPath": "db.db_dependencies",
        "description": "db.db_dependencies",
        "peekOfCode": "def get_database(request: Request) -> Database:\n    return request.app.state._db",
        "detail": "db.db_dependencies",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "config = Config(\".env\")\nPROJECT_NAME = \"FASTAPI_TDD_DEMO\"\nDESCRIPTION = \"Proyecto Demo Para Desarrollo de APIs con Python\"\nDEBUG: bool = False\nTIMEZONE: str = \"UTC\"\nVERSION = \"1.0.0\"\nAPI_PREFIX = \"/api/v1\"\nPOSTGRES_USER = config(\"POSTGRES_USER\", cast=str)\nPOSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "PROJECT_NAME",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "PROJECT_NAME = \"FASTAPI_TDD_DEMO\"\nDESCRIPTION = \"Proyecto Demo Para Desarrollo de APIs con Python\"\nDEBUG: bool = False\nTIMEZONE: str = \"UTC\"\nVERSION = \"1.0.0\"\nAPI_PREFIX = \"/api/v1\"\nPOSTGRES_USER = config(\"POSTGRES_USER\", cast=str)\nPOSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DESCRIPTION",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "DESCRIPTION = \"Proyecto Demo Para Desarrollo de APIs con Python\"\nDEBUG: bool = False\nTIMEZONE: str = \"UTC\"\nVERSION = \"1.0.0\"\nAPI_PREFIX = \"/api/v1\"\nPOSTGRES_USER = config(\"POSTGRES_USER\", cast=str)\nPOSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "VERSION",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "VERSION = \"1.0.0\"\nAPI_PREFIX = \"/api/v1\"\nPOSTGRES_USER = config(\"POSTGRES_USER\", cast=str)\nPOSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "API_PREFIX",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "API_PREFIX = \"/api/v1\"\nPOSTGRES_USER = config(\"POSTGRES_USER\", cast=str)\nPOSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "POSTGRES_USER",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "POSTGRES_USER = config(\"POSTGRES_USER\", cast=str)\nPOSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "POSTGRES_PASSWORD",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "POSTGRES_PASSWORD = config(\"POSTGRES_PASSWORD\", cast=Secret)\nPOSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "POSTGRES_SERVER",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "POSTGRES_SERVER = config(\"POSTGRES_SERVER\", cast=str, default=\"db\")\nPOSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "POSTGRES_PORT",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "POSTGRES_PORT = config(\"POSTGRES_PORT\", cast=str, default=\"5432\")\nPOSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "POSTGRES_DB",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "POSTGRES_DB = config(\"POSTGRES_DB\", cast=str)\n# auth and jwt\nSECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "SECRET_KEY = config(\"SECRET_KEY\", cast=Secret)\nACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "ACCESS_TOKEN_EXPIRE_MINUTES",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "ACCESS_TOKEN_EXPIRE_MINUTES = config(\"ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int)\nJWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_ALGORITHM",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "JWT_ALGORITHM = config(\"JWT_ALGORITHM\", cast=str)\nJWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",\n)",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_AUDIENCE",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "JWT_AUDIENCE = config(\"JWT_AUDIENCE\", cast=str)\nJWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",\n)\nDB_MIN_SIZE: int = 2",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "JWT_TOKEN_PREFIX",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "JWT_TOKEN_PREFIX = config(\"JWT_TOKEN_PREFIX\", cast=str)\nAES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",\n)\nDB_MIN_SIZE: int = 2\nDB_MAX_SIZE: int = 15",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "AES_KEY",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "AES_KEY = config(\"AES_KEY\", cast=str)\nAES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",\n)\nDB_MIN_SIZE: int = 2\nDB_MAX_SIZE: int = 15\nDB_FORCE_ROLL_BACK: bool = False",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "AES_BLOCKSIZE",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "AES_BLOCKSIZE = config(\"AES_BLOCKSIZE\", cast=int)\nDATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",\n)\nDB_MIN_SIZE: int = 2\nDB_MAX_SIZE: int = 15\nDB_FORCE_ROLL_BACK: bool = False",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DATABASE_URL",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "DATABASE_URL = config(\n    \"DATABASE_URL\",\n    cast=DatabaseURL,\n    default=f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER}:{POSTGRES_PORT}/{POSTGRES_DB}\",\n)\nDB_MIN_SIZE: int = 2\nDB_MAX_SIZE: int = 15\nDB_FORCE_ROLL_BACK: bool = False",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "create_start_app_handler",
        "kind": 2,
        "importPath": "handlers",
        "description": "handlers",
        "peekOfCode": "def create_start_app_handler(app: FastAPI) -> Callable:\n    async def start_app() -> None:\n        await connect_to_db(app)\n    return start_app\ndef create_stop_app_handler(app: FastAPI) -> Callable:\n    async def stop_app() -> None:\n        await close_db_connection(app)\n    return stop_app",
        "detail": "handlers",
        "documentation": {}
    },
    {
        "label": "create_stop_app_handler",
        "kind": 2,
        "importPath": "handlers",
        "description": "handlers",
        "peekOfCode": "def create_stop_app_handler(app: FastAPI) -> Callable:\n    async def stop_app() -> None:\n        await close_db_connection(app)\n    return stop_app",
        "detail": "handlers",
        "documentation": {}
    },
    {
        "label": "get_application",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_application():\n    app = FastAPI(\n        title=config.PROJECT_NAME,\n        description=config.DESCRIPTION,\n        version=config.VERSION,\n        debug=config.DEBUG,\n    )\n    app.add_middleware(\n        CORSMiddleware,\n        allow_origins=[\"*\"],",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = get_application()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "routers",
        "description": "routers",
        "peekOfCode": "router = APIRouter()\nrouter.include_router(auth_router)\nrouter.include_router(user_router)\nrouter.include_router(ingredient_router)",
        "detail": "routers",
        "documentation": {}
    }
]